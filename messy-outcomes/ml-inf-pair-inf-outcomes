given mrusse03 test  1, mrusse03 passed
given mrusse03 test  1, hlin02   typed-incorrectly -- Term "(letrec ((f (lambda (x) (+ x 1)))  (g (lambda (y) (letrec                   ((z (lambda () (f y)))) (z))))) (o g f))" should have type "int -> int", but your interpreter inferred type "forall 'a . int -> 'a".
given mrusse03 test  1, esalow01 passed
given mrusse03 test  1, bkolta01 passed
given mrusse03 test  1, gong01   passed
given mrusse03 test  1, nr       typed-incorrectly -- Term "(letrec ((f (lambda (x) (+ x 1)))  (g (lambda (y) (letrec                   ((z (lambda () (f y)))) (z))))) (o g f))" should have type "int -> int", but your interpreter inferred type "".
given mrusse03 test  1, kmcneely passed
given mrusse03 test  1, jaltre01 did-not-type -- Term "(letrec ((f (lambda (x) (+ x 1)))  (g (lambda (y) (letrec                   ((z (lambda () (f y)))) (z))))) (o g f))" should have type "int -> int", but your interpreter failed with the message "variable f not found".
given mrusse03 test  1, rmonde01 passed
given mrusse03 test  1, xzhang01 passed
given mrusse03 test  1, jkenne05 passed
given mrusse03 test  1, hnasar01 typed-incorrectly -- Term "(letrec ((f (lambda (x) (+ x 1)))  (g (lambda (y) (letrec                   ((z (lambda () (f y)))) (z))))) (o g f))" should have type "int -> int", but your interpreter inferred type "forall 'a . int -> 'a".
given mrusse03 test  1, jpearl05 passed
given mrusse03 test  1, mdarsn01 typed-incorrectly -- Term "(letrec ((f (lambda (x) (+ x 1)))  (g (lambda (y) (letrec                   ((z (lambda () (f y)))) (z))))) (o g f))" should have type "int -> int", but your interpreter inferred type "forall 'a . int -> 'a".
given mrusse03 test  1, tsoule01 passed
given mrusse03 test  1, agallant passed
given mrusse03 test  1, adreyf01 did-not-type -- Term "(letrec ((f (lambda (x) (+ x 1)))  (g (lambda (y) (letrec                   ((z (lambda () (f y)))) (z))))) (o g f))" should have type "int -> int", but your interpreter failed with the message "type error: Cannot unify int * int and 'a * int".
given mrusse03 test  1, jwoold01 errored -- Term "(letrec ((f (lambda (x) (+ x 1)))  (g (lambda (y) (letrec                   ((z (lambda () (f y)))) (z))))) (o g f))" should have type "int -> int", but your interpreter failed with an uncaught exception.
given mrusse03 test  1, dkass01  passed
given mrusse03 test  1, asamps01 passed
given mrusse03 test  1, jbryan04 errored -- Term "(letrec ((f (lambda (x) (+ x 1)))  (g (lambda (y) (letrec                   ((z (lambda () (f y)))) (z))))) (o g f))" should have type "int -> int", but your interpreter failed with an uncaught exception.
given mrusse03 test  1, nbugas01 typed-incorrectly -- Term "(letrec ((f (lambda (x) (+ x 1)))  (g (lambda (y) (letrec                   ((z (lambda () (f y)))) (z))))) (o g f))" should have type "int -> int", but your interpreter inferred type "forall 'a . int -> 'a".
given mrusse03 test  1, mleise01 typed-incorrectly -- Term "(letrec ((f (lambda (x) (+ x 1)))  (g (lambda (y) (letrec                   ((z (lambda () (f y)))) (z))))) (o g f))" should have type "int -> int", but your interpreter inferred type "forall 'a . int -> 'a".
given mrusse03 test  2, mrusse03 passed
given mrusse03 test  2, hlin02   passed
given mrusse03 test  2, esalow01 passed
given mrusse03 test  2, bkolta01 passed
given mrusse03 test  2, gong01   passed
given mrusse03 test  2, nr       typed-untypeable -- Term "(letrec ((f (lambda (x) (g)))  (g (lambda (x) (f)))) (o g f))" should trigger a uML error, but your interpreter inferred type "".
given mrusse03 test  2, kmcneely passed
given mrusse03 test  2, jaltre01 passed
given mrusse03 test  2, rmonde01 passed
given mrusse03 test  2, xzhang01 passed
given mrusse03 test  2, jkenne05 passed
given mrusse03 test  2, hnasar01 typed-untypeable -- Term "(letrec ((f (lambda (x) (g)))  (g (lambda (x) (f)))) (o g f))" should trigger a uML error, but your interpreter inferred type "forall 'a, 'b . 'a -> 'b".
given mrusse03 test  2, jpearl05 passed
given mrusse03 test  2, mdarsn01 passed
given mrusse03 test  2, tsoule01 passed
given mrusse03 test  2, agallant passed
given mrusse03 test  2, adreyf01 typed-untypeable -- Term "(letrec ((f (lambda (x) (g)))  (g (lambda (x) (f)))) (o g f))" should trigger a uML error, but your interpreter inferred type "forall 'a, 'b . 'a -> 'b".
given mrusse03 test  2, jwoold01 errored -- Term "(letrec ((f (lambda (x) (g)))  (g (lambda (x) (f)))) (o g f))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given mrusse03 test  2, dkass01  passed
given mrusse03 test  2, asamps01 passed
given mrusse03 test  2, jbryan04 errored -- Term "(letrec ((f (lambda (x) (g)))  (g (lambda (x) (f)))) (o g f))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given mrusse03 test  2, nbugas01 passed
given mrusse03 test  2, mleise01 passed
given mrusse03 test  3, mrusse03 passed
given mrusse03 test  3, hlin02   passed
given mrusse03 test  3, esalow01 passed
given mrusse03 test  3, bkolta01 passed
given mrusse03 test  3, gong01   passed
given mrusse03 test  3, nr       typed-untypeable -- Term "(letrec ((f (lambda (x y z) z))  (g (lambda (q r s) (q (f r)))))  (g f '() #t))" should trigger a uML error, but your interpreter inferred type "".
given mrusse03 test  3, kmcneely passed
given mrusse03 test  3, jaltre01 passed
given mrusse03 test  3, rmonde01 passed
given mrusse03 test  3, xzhang01 passed
given mrusse03 test  3, jkenne05 passed
given mrusse03 test  3, hnasar01 passed
given mrusse03 test  3, jpearl05 passed
given mrusse03 test  3, mdarsn01 passed
given mrusse03 test  3, tsoule01 passed
given mrusse03 test  3, agallant passed
given mrusse03 test  3, adreyf01 passed
given mrusse03 test  3, jwoold01 errored -- Term "(letrec ((f (lambda (x y z) z))  (g (lambda (q r s) (q (f r)))))  (g f '() #t))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given mrusse03 test  3, dkass01  passed
given mrusse03 test  3, asamps01 passed
given mrusse03 test  3, jbryan04 errored -- Term "(letrec ((f (lambda (x y z) z))  (g (lambda (q r s) (q (f r)))))  (g f '() #t))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given mrusse03 test  3, nbugas01 passed
given mrusse03 test  3, mleise01 passed
given hlin02   test  1, mrusse03 passed
given hlin02   test  1, hlin02   passed
given hlin02   test  1, esalow01 passed
given hlin02   test  1, bkolta01 passed
given hlin02   test  1, gong01   errored -- Term "(define f (x)     (let ((g (lambda (x) (f x))))             (g f)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given hlin02   test  1, nr       typed-untypeable -- Term "(define f (x)     (let ((g (lambda (x) (f x))))             (g f)))" should trigger a uML error, but your interpreter inferred type "".
given hlin02   test  1, kmcneely typed-untypeable -- Term "(define f (x)     (let ((g (lambda (x) (f x))))             (g f)))" should trigger a uML error, but your interpreter inferred type "forall 'a, 'b . 'a -> 'b".
given hlin02   test  1, jaltre01 typed-untypeable -- Term "(define f (x)     (let ((g (lambda (x) (f x))))             (g f)))" should trigger a uML error, but your interpreter inferred type "forall 'a, 'b . 'a -> 'b".
given hlin02   test  1, rmonde01 passed
given hlin02   test  1, xzhang01 passed
given hlin02   test  1, jkenne05 passed
given hlin02   test  1, hnasar01 passed
given hlin02   test  1, jpearl05 passed
given hlin02   test  1, mdarsn01 typed-untypeable -- Term "(define f (x)     (let ((g (lambda (x) (f x))))             (g f)))" should trigger a uML error, but your interpreter inferred type "forall 'a, 'b . 'a -> 'b".
given hlin02   test  1, tsoule01 passed
given hlin02   test  1, agallant typed-untypeable -- Term "(define f (x)     (let ((g (lambda (x) (f x))))             (g f)))" should trigger a uML error, but your interpreter inferred type "forall 'a, 'b . 'a -> 'b".
given hlin02   test  1, adreyf01 passed
given hlin02   test  1, jwoold01 errored -- Term "(define f (x)     (let ((g (lambda (x) (f x))))             (g f)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given hlin02   test  1, dkass01  typed-untypeable -- Term "(define f (x)     (let ((g (lambda (x) (f x))))             (g f)))" should trigger a uML error, but your interpreter inferred type "forall 'a, 'b . 'a -> 'b".
given hlin02   test  1, asamps01 passed
given hlin02   test  1, jbryan04 errored -- Term "(define f (x)     (let ((g (lambda (x) (f x))))             (g f)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given hlin02   test  1, nbugas01 passed
given hlin02   test  1, mleise01 typed-untypeable -- Term "(define f (x)     (let ((g (lambda (x) (f x))))             (g f)))" should trigger a uML error, but your interpreter inferred type "forall 'a, 'b . 'a -> 'b".
given hlin02   test  2, mrusse03 typed-untypeable -- Term "(define g (x)     (let ((a (+ x 1))           (b (and x #t)))           x))" should trigger a uML error, but your interpreter inferred type "bool -> bool".
given hlin02   test  2, hlin02   passed
given hlin02   test  2, esalow01 passed
given hlin02   test  2, bkolta01 passed
given hlin02   test  2, gong01   passed
given hlin02   test  2, nr       typed-untypeable -- Term "(define g (x)     (let ((a (+ x 1))           (b (and x #t)))           x))" should trigger a uML error, but your interpreter inferred type "".
given hlin02   test  2, kmcneely passed
given hlin02   test  2, jaltre01 typed-untypeable -- Term "(define g (x)     (let ((a (+ x 1))           (b (and x #t)))           x))" should trigger a uML error, but your interpreter inferred type "forall 'a . 'a -> 'a".
given hlin02   test  2, rmonde01 passed
given hlin02   test  2, xzhang01 passed
given hlin02   test  2, jkenne05 passed
given hlin02   test  2, hnasar01 passed
given hlin02   test  2, jpearl05 passed
given hlin02   test  2, mdarsn01 typed-untypeable -- Term "(define g (x)     (let ((a (+ x 1))           (b (and x #t)))           x))" should trigger a uML error, but your interpreter inferred type "bool -> bool".
given hlin02   test  2, tsoule01 passed
given hlin02   test  2, agallant passed
given hlin02   test  2, adreyf01 passed
given hlin02   test  2, jwoold01 errored -- Term "(define g (x)     (let ((a (+ x 1))           (b (and x #t)))           x))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given hlin02   test  2, dkass01  passed
given hlin02   test  2, asamps01 passed
given hlin02   test  2, jbryan04 errored -- Term "(define g (x)     (let ((a (+ x 1))           (b (and x #t)))           x))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given hlin02   test  2, nbugas01 passed
given hlin02   test  2, mleise01 passed
given hlin02   test  3, mrusse03 passed
given hlin02   test  3, hlin02   passed
given hlin02   test  3, esalow01 passed
given hlin02   test  3, bkolta01 passed
given hlin02   test  3, gong01   passed
given hlin02   test  3, nr       typed-untypeable -- Term "(define h (x)    (letrec ((y z)             (z (+ y 1)))             (and y x)))" should trigger a uML error, but your interpreter inferred type "".
given hlin02   test  3, kmcneely passed
given hlin02   test  3, jaltre01 passed
given hlin02   test  3, rmonde01 passed
given hlin02   test  3, xzhang01 passed
given hlin02   test  3, jkenne05 passed
given hlin02   test  3, hnasar01 passed
given hlin02   test  3, jpearl05 passed
given hlin02   test  3, mdarsn01 passed
given hlin02   test  3, tsoule01 passed
given hlin02   test  3, agallant passed
given hlin02   test  3, adreyf01 passed
given hlin02   test  3, jwoold01 errored -- Term "(define h (x)    (letrec ((y z)             (z (+ y 1)))             (and y x)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given hlin02   test  3, dkass01  passed
given hlin02   test  3, asamps01 passed
given hlin02   test  3, jbryan04 errored -- Term "(define h (x)    (letrec ((y z)             (z (+ y 1)))             (and y x)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given hlin02   test  3, nbugas01 passed
given hlin02   test  3, mleise01 typed-untypeable -- Term "(define h (x)    (letrec ((y z)             (z (+ y 1)))             (and y x)))" should trigger a uML error, but your interpreter inferred type "bool -> bool".
given esalow01 test  1, mrusse03 passed
given esalow01 test  1, hlin02   passed
given esalow01 test  1, esalow01 passed
given esalow01 test  1, bkolta01 passed
given esalow01 test  1, gong01   passed
given esalow01 test  1, nr       typed-untypeable -- Term "(if (< 1 2) 1 'fail)" should trigger a uML error, but your interpreter inferred type "".
given esalow01 test  1, kmcneely passed
given esalow01 test  1, jaltre01 passed
given esalow01 test  1, rmonde01 passed
given esalow01 test  1, xzhang01 passed
given esalow01 test  1, jkenne05 passed
given esalow01 test  1, hnasar01 passed
given esalow01 test  1, jpearl05 passed
given esalow01 test  1, mdarsn01 passed
given esalow01 test  1, tsoule01 passed
given esalow01 test  1, agallant passed
given esalow01 test  1, adreyf01 passed
given esalow01 test  1, jwoold01 errored -- Term "(if (< 1 2) 1 'fail)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given esalow01 test  1, dkass01  passed
given esalow01 test  1, asamps01 passed
given esalow01 test  1, jbryan04 errored -- Term "(if (< 1 2) 1 'fail)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given esalow01 test  1, nbugas01 passed
given esalow01 test  1, mleise01 passed
given esalow01 test  2, mrusse03 passed
given esalow01 test  2, hlin02   passed
given esalow01 test  2, esalow01 passed
given esalow01 test  2, bkolta01 passed
given esalow01 test  2, gong01   passed
given esalow01 test  2, nr       passed
given esalow01 test  2, kmcneely passed
given esalow01 test  2, jaltre01 passed
given esalow01 test  2, rmonde01 passed
given esalow01 test  2, xzhang01 passed
given esalow01 test  2, jkenne05 passed
given esalow01 test  2, hnasar01 passed
given esalow01 test  2, jpearl05 passed
given esalow01 test  2, mdarsn01 passed
given esalow01 test  2, tsoule01 passed
given esalow01 test  2, agallant passed
given esalow01 test  2, adreyf01 passed
given esalow01 test  2, jwoold01 errored -- Term "(define qsort (p?)  (lambda (l)    (letrec (      (sort (lambda (sorted unsorted) ;   sorted is the   sorted list        (if (null? unsorted)          ; unsorted is the unsorted list          sorted          (sort (cons (car unsorted)            (sort sorted (filter ((curry p?) (car unsorted)) (cdr unsorted))))            (filter (o not ((uncurry p?) (car unsorted))) (cdr unsorted)))))))  (sort '() l))))" should have type "", but your interpreter failed with an uncaught exception.
given esalow01 test  2, dkass01  passed
given esalow01 test  2, asamps01 passed
given esalow01 test  2, jbryan04 errored -- Term "(define qsort (p?)  (lambda (l)    (letrec (      (sort (lambda (sorted unsorted) ;   sorted is the   sorted list        (if (null? unsorted)          ; unsorted is the unsorted list          sorted          (sort (cons (car unsorted)            (sort sorted (filter ((curry p?) (car unsorted)) (cdr unsorted))))            (filter (o not ((uncurry p?) (car unsorted))) (cdr unsorted)))))))  (sort '() l))))" should have type "", but your interpreter failed with an uncaught exception.
given esalow01 test  2, nbugas01 passed
given esalow01 test  2, mleise01 passed
given esalow01 test  3, mrusse03 passed
given esalow01 test  3, hlin02   passed
given esalow01 test  3, esalow01 passed
given esalow01 test  3, bkolta01 passed
given esalow01 test  3, gong01   passed
given esalow01 test  3, nr       passed
given esalow01 test  3, kmcneely passed
given esalow01 test  3, jaltre01 passed
given esalow01 test  3, rmonde01 passed
given esalow01 test  3, xzhang01 passed
given esalow01 test  3, jkenne05 passed
given esalow01 test  3, hnasar01 passed
given esalow01 test  3, jpearl05 passed
given esalow01 test  3, mdarsn01 passed
given esalow01 test  3, tsoule01 passed
given esalow01 test  3, agallant passed
given esalow01 test  3, adreyf01 passed
given esalow01 test  3, jwoold01 errored -- Term "(define qsort (p?)  (lambda (l)    (letrec (      (sort (lambda (sorted unsorted) ;   sorted is the   sorted list        (if (null? unsorted)          ; unsorted is the unsorted list          sorted          (sort (cons (car unsorted)            (sort sorted (filter ((curry p?) (car unsorted)) (cdr unsorted))))            (filter (o not ((curry p?) (car unsorted))) (cdr unsorted)))))))  (sort '() l))))" should have type "", but your interpreter failed with an uncaught exception.
given esalow01 test  3, dkass01  passed
given esalow01 test  3, asamps01 passed
given esalow01 test  3, jbryan04 errored -- Term "(define qsort (p?)  (lambda (l)    (letrec (      (sort (lambda (sorted unsorted) ;   sorted is the   sorted list        (if (null? unsorted)          ; unsorted is the unsorted list          sorted          (sort (cons (car unsorted)            (sort sorted (filter ((curry p?) (car unsorted)) (cdr unsorted))))            (filter (o not ((curry p?) (car unsorted))) (cdr unsorted)))))))  (sort '() l))))" should have type "", but your interpreter failed with an uncaught exception.
given esalow01 test  3, nbugas01 passed
given esalow01 test  3, mleise01 passed
given bkolta01 test  1, mrusse03 passed
given bkolta01 test  1, hlin02   passed
given bkolta01 test  1, esalow01 passed
given bkolta01 test  1, bkolta01 passed
given bkolta01 test  1, gong01   passed
given bkolta01 test  1, nr       typed-incorrectly -- Term "(define foobar (x) (letrec ((y (lambda (a) (z a))) (z (lambda (b) (+ 1 b)))) y))" should have type "forall 'a . 'a -> (int -> int)", but your interpreter inferred type "".
given bkolta01 test  1, kmcneely passed
given bkolta01 test  1, jaltre01 did-not-type -- Term "(define foobar (x) (letrec ((y (lambda (a) (z a))) (z (lambda (b) (+ 1 b)))) y))" should have type "forall 'a . 'a -> (int -> int)", but your interpreter failed with the message "variable z not found".
given bkolta01 test  1, rmonde01 passed
given bkolta01 test  1, xzhang01 passed
given bkolta01 test  1, jkenne05 passed
given bkolta01 test  1, hnasar01 typed-incorrectly -- Term "(define foobar (x) (letrec ((y (lambda (a) (z a))) (z (lambda (b) (+ 1 b)))) y))" should have type "forall 'a . 'a -> (int -> int)", but your interpreter inferred type "forall 'a, 'b, 'c . 'a -> ('b -> 'c)".
given bkolta01 test  1, jpearl05 passed
given bkolta01 test  1, mdarsn01 passed
given bkolta01 test  1, tsoule01 passed
given bkolta01 test  1, agallant passed
given bkolta01 test  1, adreyf01 typed-incorrectly -- Term "(define foobar (x) (letrec ((y (lambda (a) (z a))) (z (lambda (b) (+ 1 b)))) y))" should have type "forall 'a . 'a -> (int -> int)", but your interpreter inferred type "forall 'a, 'b, 'c . 'a -> ('b -> 'c)".
given bkolta01 test  1, jwoold01 errored -- Term "(define foobar (x) (letrec ((y (lambda (a) (z a))) (z (lambda (b) (+ 1 b)))) y))" should have type "forall 'a . 'a -> (int -> int)", but your interpreter failed with an uncaught exception.
given bkolta01 test  1, dkass01  passed
given bkolta01 test  1, asamps01 passed
given bkolta01 test  1, jbryan04 errored -- Term "(define foobar (x) (letrec ((y (lambda (a) (z a))) (z (lambda (b) (+ 1 b)))) y))" should have type "forall 'a . 'a -> (int -> int)", but your interpreter failed with an uncaught exception.
given bkolta01 test  1, nbugas01 passed
given bkolta01 test  1, mleise01 typed-incorrectly -- Term "(define foobar (x) (letrec ((y (lambda (a) (z a))) (z (lambda (b) (+ 1 b)))) y))" should have type "forall 'a . 'a -> (int -> int)", but your interpreter inferred type "forall 'a, 'b, 'c . 'a -> ('b -> 'c)".
given bkolta01 test  2, mrusse03 passed
given bkolta01 test  2, hlin02   passed
given bkolta01 test  2, esalow01 passed
given bkolta01 test  2, bkolta01 passed
given bkolta01 test  2, gong01   passed
given bkolta01 test  2, nr       typed-untypeable -- Term "(cons 1 #f)" should trigger a uML error, but your interpreter inferred type "".
given bkolta01 test  2, kmcneely passed
given bkolta01 test  2, jaltre01 passed
given bkolta01 test  2, rmonde01 passed
given bkolta01 test  2, xzhang01 passed
given bkolta01 test  2, jkenne05 passed
given bkolta01 test  2, hnasar01 passed
given bkolta01 test  2, jpearl05 passed
given bkolta01 test  2, mdarsn01 passed
given bkolta01 test  2, tsoule01 passed
given bkolta01 test  2, agallant passed
given bkolta01 test  2, adreyf01 passed
given bkolta01 test  2, jwoold01 errored -- Term "(cons 1 #f)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given bkolta01 test  2, dkass01  passed
given bkolta01 test  2, asamps01 passed
given bkolta01 test  2, jbryan04 errored -- Term "(cons 1 #f)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given bkolta01 test  2, nbugas01 passed
given bkolta01 test  2, mleise01 passed
given bkolta01 test  3, mrusse03 passed
given bkolta01 test  3, hlin02   passed
given bkolta01 test  3, esalow01 passed
given bkolta01 test  3, bkolta01 passed
given bkolta01 test  3, gong01   passed
given bkolta01 test  3, nr       typed-untypeable -- Term "(5 five)" should trigger a uML error, but your interpreter inferred type "".
given bkolta01 test  3, kmcneely passed
given bkolta01 test  3, jaltre01 passed
given bkolta01 test  3, rmonde01 passed
given bkolta01 test  3, xzhang01 passed
given bkolta01 test  3, jkenne05 passed
given bkolta01 test  3, hnasar01 passed
given bkolta01 test  3, jpearl05 passed
given bkolta01 test  3, mdarsn01 passed
given bkolta01 test  3, tsoule01 passed
given bkolta01 test  3, agallant passed
given bkolta01 test  3, adreyf01 passed
given bkolta01 test  3, jwoold01 errored -- Term "(5 five)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given bkolta01 test  3, dkass01  passed
given bkolta01 test  3, asamps01 passed
given bkolta01 test  3, jbryan04 errored -- Term "(5 five)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given bkolta01 test  3, nbugas01 passed
given bkolta01 test  3, mleise01 passed
given gong01   test  1, mrusse03 passed
given gong01   test  1, hlin02   passed
given gong01   test  1, esalow01 passed
given gong01   test  1, bkolta01 passed
given gong01   test  1, gong01   passed
given gong01   test  1, nr       typed-untypeable -- Term "(lambda (x y z) (begin (if x y 1) (if x #f y)))" should trigger a uML error, but your interpreter inferred type "".
given gong01   test  1, kmcneely passed
given gong01   test  1, jaltre01 typed-untypeable -- Term "(lambda (x y z) (begin (if x y 1) (if x #f y)))" should trigger a uML error, but your interpreter inferred type "forall 'a, 'b, 'c . 'a * 'b * 'c -> bool".
given gong01   test  1, rmonde01 passed
given gong01   test  1, xzhang01 passed
given gong01   test  1, jkenne05 passed
given gong01   test  1, hnasar01 passed
given gong01   test  1, jpearl05 passed
given gong01   test  1, mdarsn01 passed
given gong01   test  1, tsoule01 passed
given gong01   test  1, agallant passed
given gong01   test  1, adreyf01 passed
given gong01   test  1, jwoold01 errored -- Term "(lambda (x y z) (begin (if x y 1) (if x #f y)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given gong01   test  1, dkass01  passed
given gong01   test  1, asamps01 passed
given gong01   test  1, jbryan04 errored -- Term "(lambda (x y z) (begin (if x y 1) (if x #f y)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given gong01   test  1, nbugas01 typed-untypeable -- Term "(lambda (x y z) (begin (if x y 1) (if x #f y)))" should trigger a uML error, but your interpreter inferred type "forall 'a, 'b, 'c . 'a * 'b * 'c -> bool".
given gong01   test  1, mleise01 passed
given gong01   test  2, mrusse03 passed
given gong01   test  2, hlin02   passed
given gong01   test  2, esalow01 passed
given gong01   test  2, bkolta01 errored -- Term "(begin)" should have type "unit", but your interpreter failed with an uncaught exception.
given gong01   test  2, gong01   passed
given gong01   test  2, nr       typed-incorrectly -- Term "(begin)" should have type "unit", but your interpreter inferred type "".
given gong01   test  2, kmcneely passed
given gong01   test  2, jaltre01 passed
given gong01   test  2, rmonde01 errored -- Term "(begin)" should have type "unit", but your interpreter failed with an uncaught exception.
given gong01   test  2, xzhang01 passed
given gong01   test  2, jkenne05 passed
given gong01   test  2, hnasar01 errored -- Term "(begin)" should have type "unit", but your interpreter failed with an uncaught exception.
given gong01   test  2, jpearl05 passed
given gong01   test  2, mdarsn01 passed
given gong01   test  2, tsoule01 passed
given gong01   test  2, agallant passed
given gong01   test  2, adreyf01 passed
given gong01   test  2, jwoold01 errored -- Term "(begin)" should have type "unit", but your interpreter failed with an uncaught exception.
given gong01   test  2, dkass01  passed
given gong01   test  2, asamps01 errored -- Term "(begin)" should have type "unit", but your interpreter failed with an uncaught exception.
given gong01   test  2, jbryan04 errored -- Term "(begin)" should have type "unit", but your interpreter failed with an uncaught exception.
given gong01   test  2, nbugas01 passed
given gong01   test  2, mleise01 passed
given gong01   test  3, mrusse03 passed
given gong01   test  3, hlin02   passed
given gong01   test  3, esalow01 passed
given gong01   test  3, bkolta01 passed
given gong01   test  3, gong01   passed
given gong01   test  3, nr       typed-untypeable -- Term "(define f (x)  (letrec ((foo (lambda (vs)             (if (null? vs) (+ x 1)                           (foo vs)))))  (if x (foo '(1 2 3)) (foo '(4 5 6)))))" should trigger a uML error, but your interpreter inferred type "".
given gong01   test  3, kmcneely passed
given gong01   test  3, jaltre01 passed
given gong01   test  3, rmonde01 passed
given gong01   test  3, xzhang01 passed
given gong01   test  3, jkenne05 passed
given gong01   test  3, hnasar01 passed
given gong01   test  3, jpearl05 passed
given gong01   test  3, mdarsn01 typed-untypeable -- Term "(define f (x)  (letrec ((foo (lambda (vs)             (if (null? vs) (+ x 1)                           (foo vs)))))  (if x (foo '(1 2 3)) (foo '(4 5 6)))))" should trigger a uML error, but your interpreter inferred type "forall 'a, 'b . 'a -> 'b".
given gong01   test  3, tsoule01 passed
given gong01   test  3, agallant passed
given gong01   test  3, adreyf01 passed
given gong01   test  3, jwoold01 errored -- Term "(define f (x)  (letrec ((foo (lambda (vs)             (if (null? vs) (+ x 1)                           (foo vs)))))  (if x (foo '(1 2 3)) (foo '(4 5 6)))))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given gong01   test  3, dkass01  passed
given gong01   test  3, asamps01 passed
given gong01   test  3, jbryan04 errored -- Term "(define f (x)  (letrec ((foo (lambda (vs)             (if (null? vs) (+ x 1)                           (foo vs)))))  (if x (foo '(1 2 3)) (foo '(4 5 6)))))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given gong01   test  3, nbugas01 passed
given gong01   test  3, mleise01 passed
given nr       test  1, mrusse03 passed
given nr       test  1, hlin02   did-not-type -- Term "(letrec ((id (lambda (x) x))) (pair (id 0) (id #t)))" should have type "int * bool", but your interpreter failed with the message "type error: Cannot unify int and bool".
given nr       test  1, esalow01 passed
given nr       test  1, bkolta01 did-not-type -- Term "(letrec ((id (lambda (x) x))) (pair (id 0) (id #t)))" should have type "int * bool", but your interpreter failed with the message "type error: Cannot unify int and bool".
given nr       test  1, gong01   passed
given nr       test  1, nr       typed-incorrectly -- Term "(letrec ((id (lambda (x) x))) (pair (id 0) (id #t)))" should have type "int * bool", but your interpreter inferred type "".
given nr       test  1, kmcneely passed
given nr       test  1, jaltre01 passed
given nr       test  1, rmonde01 passed
given nr       test  1, xzhang01 passed
given nr       test  1, jkenne05 passed
given nr       test  1, hnasar01 passed
given nr       test  1, jpearl05 passed
given nr       test  1, mdarsn01 did-not-type -- Term "(letrec ((id (lambda (x) x))) (pair (id 0) (id #t)))" should have type "int * bool", but your interpreter failed with the message "type error: Cannot unify int and bool".
given nr       test  1, tsoule01 passed
given nr       test  1, agallant passed
given nr       test  1, adreyf01 passed
given nr       test  1, jwoold01 errored -- Term "(letrec ((id (lambda (x) x))) (pair (id 0) (id #t)))" should have type "int * bool", but your interpreter failed with an uncaught exception.
given nr       test  1, dkass01  passed
given nr       test  1, asamps01 passed
given nr       test  1, jbryan04 errored -- Term "(letrec ((id (lambda (x) x))) (pair (id 0) (id #t)))" should have type "int * bool", but your interpreter failed with an uncaught exception.
given nr       test  1, nbugas01 passed
given nr       test  1, mleise01 passed
given nr       test  2, mrusse03 passed
given nr       test  2, hlin02   passed
given nr       test  2, esalow01 did-not-type -- Term "(val lists '(() ()))" should have type "forall 'a . 'a list list", but your interpreter failed with the message "type error: value is of type 't413 list but list is of type 't414 list list".
given nr       test  2, bkolta01 passed
given nr       test  2, gong01   errored -- Term "(val lists '(() ()))" should have type "forall 'a . 'a list list", but your interpreter failed with an uncaught exception.
given nr       test  2, nr       typed-incorrectly -- Term "(val lists '(() ()))" should have type "forall 'a . 'a list list", but your interpreter inferred type "".
given nr       test  2, kmcneely passed
given nr       test  2, jaltre01 did-not-type -- Term "(val lists '(() ()))" should have type "forall 'a . 'a list list", but your interpreter failed with the message "type error: Cannot unify 'a and 'a list".
given nr       test  2, rmonde01 passed
given nr       test  2, xzhang01 did-not-type -- Term "(val lists '(() ()))" should have type "forall 'a . 'a list list", but your interpreter failed with the message "type error: list ill-formed".
given nr       test  2, jkenne05 passed
given nr       test  2, hnasar01 passed
given nr       test  2, jpearl05 passed
given nr       test  2, mdarsn01 passed
given nr       test  2, tsoule01 passed
given nr       test  2, agallant passed
given nr       test  2, adreyf01 did-not-type -- Term "(val lists '(() ()))" should have type "forall 'a . 'a list list", but your interpreter failed with the message "type error: mixed types in list literal".
given nr       test  2, jwoold01 errored -- Term "(val lists '(() ()))" should have type "forall 'a . 'a list list", but your interpreter failed with an uncaught exception.
given nr       test  2, dkass01  passed
given nr       test  2, asamps01 passed
given nr       test  2, jbryan04 errored -- Term "(val lists '(() ()))" should have type "forall 'a . 'a list list", but your interpreter failed with an uncaught exception.
given nr       test  2, nbugas01 passed
given nr       test  2, mleise01 did-not-type -- Term "(val lists '(() ()))" should have type "forall 'a . 'a list list", but your interpreter failed with the message "type error: can't make list of this type".
given nr       test  3, mrusse03 passed
given nr       test  3, hlin02   typed-untypeable -- Term "(val lists2 '((a) (1)))" should trigger a uML error, but your interpreter inferred type "sym list list".
given nr       test  3, esalow01 passed
given nr       test  3, bkolta01 passed
given nr       test  3, gong01   passed
given nr       test  3, nr       typed-untypeable -- Term "(val lists2 '((a) (1)))" should trigger a uML error, but your interpreter inferred type "".
given nr       test  3, kmcneely passed
given nr       test  3, jaltre01 passed
given nr       test  3, rmonde01 passed
given nr       test  3, xzhang01 passed
given nr       test  3, jkenne05 passed
given nr       test  3, hnasar01 passed
given nr       test  3, jpearl05 passed
given nr       test  3, mdarsn01 passed
given nr       test  3, tsoule01 passed
given nr       test  3, agallant passed
given nr       test  3, adreyf01 passed
given nr       test  3, jwoold01 errored -- Term "(val lists2 '((a) (1)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given nr       test  3, dkass01  passed
given nr       test  3, asamps01 passed
given nr       test  3, jbryan04 errored -- Term "(val lists2 '((a) (1)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given nr       test  3, nbugas01 passed
given nr       test  3, mleise01 passed
given nr       test  4, mrusse03 typed-incorrectly -- Term "(val lists3 '(() (1) ()))" should have type "int list list", but your interpreter inferred type "forall 'a . 'a list list".
given nr       test  4, hlin02   typed-incorrectly -- Term "(val lists3 '(() (1) ()))" should have type "int list list", but your interpreter inferred type "forall 'a . 'a list list".
given nr       test  4, esalow01 did-not-type -- Term "(val lists3 '(() (1) ()))" should have type "int list list", but your interpreter failed with the message "type error: value is of type int list but list is of type 't414 list list".
given nr       test  4, bkolta01 typed-incorrectly -- Term "(val lists3 '(() (1) ()))" should have type "int list list", but your interpreter inferred type "forall 'a . 'a list list".
given nr       test  4, gong01   errored -- Term "(val lists3 '(() (1) ()))" should have type "int list list", but your interpreter failed with an uncaught exception.
given nr       test  4, nr       typed-incorrectly -- Term "(val lists3 '(() (1) ()))" should have type "int list list", but your interpreter inferred type "".
given nr       test  4, kmcneely passed
given nr       test  4, jaltre01 did-not-type -- Term "(val lists3 '(() (1) ()))" should have type "int list list", but your interpreter failed with the message "type error: Cannot unify 'a and 'a list".
given nr       test  4, rmonde01 typed-incorrectly -- Term "(val lists3 '(() (1) ()))" should have type "int list list", but your interpreter inferred type "forall 'a . 'a list list".
given nr       test  4, xzhang01 did-not-type -- Term "(val lists3 '(() (1) ()))" should have type "int list list", but your interpreter failed with the message "type error: list ill-formed".
given nr       test  4, jkenne05 typed-incorrectly -- Term "(val lists3 '(() (1) ()))" should have type "int list list", but your interpreter inferred type "forall 'a . 'a list list".
given nr       test  4, hnasar01 typed-incorrectly -- Term "(val lists3 '(() (1) ()))" should have type "int list list", but your interpreter inferred type "forall 'a . 'a list list".
given nr       test  4, jpearl05 did-not-type -- Term "(val lists3 '(() (1) ()))" should have type "int list list", but your interpreter failed with the message "type error: mixed types in list literal".
given nr       test  4, mdarsn01 typed-incorrectly -- Term "(val lists3 '(() (1) ()))" should have type "int list list", but your interpreter inferred type "forall 'a . 'a list list".
given nr       test  4, tsoule01 passed
given nr       test  4, agallant did-not-type -- Term "(val lists3 '(() (1) ()))" should have type "int list list", but your interpreter failed with the message "type error: A list of type 'a list list cannot be instantiated to type int list list".
given nr       test  4, adreyf01 did-not-type -- Term "(val lists3 '(() (1) ()))" should have type "int list list", but your interpreter failed with the message "type error: mixed types in list literal".
given nr       test  4, jwoold01 errored -- Term "(val lists3 '(() (1) ()))" should have type "int list list", but your interpreter failed with an uncaught exception.
given nr       test  4, dkass01  did-not-type -- Term "(val lists3 '(() (1) ()))" should have type "int list list", but your interpreter failed with the message "type error: Cannot unify 'a list and int list".
given nr       test  4, asamps01 typed-incorrectly -- Term "(val lists3 '(() (1) ()))" should have type "int list list", but your interpreter inferred type "forall 'a . 'a list list".
given nr       test  4, jbryan04 errored -- Term "(val lists3 '(() (1) ()))" should have type "int list list", but your interpreter failed with an uncaught exception.
given nr       test  4, nbugas01 passed
given nr       test  4, mleise01 did-not-type -- Term "(val lists3 '(() (1) ()))" should have type "int list list", but your interpreter failed with the message "type error: Cannot unify int and 'a list".
given nr       test  5, mrusse03 typed-incorrectly -- Term "(val lists4 '(() (()) ()))" should have type "forall 'a . 'a list list list", but your interpreter inferred type "forall 'a . 'a list list".
given nr       test  5, hlin02   typed-incorrectly -- Term "(val lists4 '(() (()) ()))" should have type "forall 'a . 'a list list list", but your interpreter inferred type "forall 'a . 'a list list".
given nr       test  5, esalow01 did-not-type -- Term "(val lists4 '(() (()) ()))" should have type "forall 'a . 'a list list list", but your interpreter failed with the message "type error: value is of type 't414 list list but list is of type 't415 list list".
given nr       test  5, bkolta01 typed-incorrectly -- Term "(val lists4 '(() (()) ()))" should have type "forall 'a . 'a list list list", but your interpreter inferred type "forall 'a . 'a list list".
given nr       test  5, gong01   errored -- Term "(val lists4 '(() (()) ()))" should have type "forall 'a . 'a list list list", but your interpreter failed with an uncaught exception.
given nr       test  5, nr       typed-incorrectly -- Term "(val lists4 '(() (()) ()))" should have type "forall 'a . 'a list list list", but your interpreter inferred type "".
given nr       test  5, kmcneely passed
given nr       test  5, jaltre01 did-not-type -- Term "(val lists4 '(() (()) ()))" should have type "forall 'a . 'a list list list", but your interpreter failed with the message "type error: Cannot unify 'a and 'a list".
given nr       test  5, rmonde01 typed-incorrectly -- Term "(val lists4 '(() (()) ()))" should have type "forall 'a . 'a list list list", but your interpreter inferred type "forall 'a . 'a list list".
given nr       test  5, xzhang01 did-not-type -- Term "(val lists4 '(() (()) ()))" should have type "forall 'a . 'a list list list", but your interpreter failed with the message "type error: list ill-formed".
given nr       test  5, jkenne05 typed-incorrectly -- Term "(val lists4 '(() (()) ()))" should have type "forall 'a . 'a list list list", but your interpreter inferred type "forall 'a . 'a list list".
given nr       test  5, hnasar01 typed-incorrectly -- Term "(val lists4 '(() (()) ()))" should have type "forall 'a . 'a list list list", but your interpreter inferred type "forall 'a . 'a list list".
given nr       test  5, jpearl05 did-not-type -- Term "(val lists4 '(() (()) ()))" should have type "forall 'a . 'a list list list", but your interpreter failed with the message "type error: mixed types in list literal".
given nr       test  5, mdarsn01 typed-incorrectly -- Term "(val lists4 '(() (()) ()))" should have type "forall 'a . 'a list list list", but your interpreter inferred type "forall 'a . 'a list list".
given nr       test  5, tsoule01 passed
given nr       test  5, agallant did-not-type -- Term "(val lists4 '(() (()) ()))" should have type "forall 'a . 'a list list list", but your interpreter failed with the message "type error: A list of type 'a list list cannot be instantiated to type 'a list list list".
given nr       test  5, adreyf01 did-not-type -- Term "(val lists4 '(() (()) ()))" should have type "forall 'a . 'a list list list", but your interpreter failed with the message "type error: mixed types in list literal".
given nr       test  5, jwoold01 errored -- Term "(val lists4 '(() (()) ()))" should have type "forall 'a . 'a list list list", but your interpreter failed with an uncaught exception.
given nr       test  5, dkass01  did-not-type -- Term "(val lists4 '(() (()) ()))" should have type "forall 'a . 'a list list list", but your interpreter failed with the message "type error: Cannot unify 'a list and 'a list list".
given nr       test  5, asamps01 typed-incorrectly -- Term "(val lists4 '(() (()) ()))" should have type "forall 'a . 'a list list list", but your interpreter inferred type "forall 'a . 'a list list".
given nr       test  5, jbryan04 errored -- Term "(val lists4 '(() (()) ()))" should have type "forall 'a . 'a list list list", but your interpreter failed with an uncaught exception.
given nr       test  5, nbugas01 passed
given nr       test  5, mleise01 did-not-type -- Term "(val lists4 '(() (()) ()))" should have type "forall 'a . 'a list list list", but your interpreter failed with the message "type error: can't make list of this type".
given kmcneely test  1, mrusse03 passed
given kmcneely test  1, hlin02   passed
given kmcneely test  1, esalow01 passed
given kmcneely test  1, bkolta01 passed
given kmcneely test  1, gong01   errored -- Term "(lambda (f) (f f))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given kmcneely test  1, nr       typed-untypeable -- Term "(lambda (f) (f f))" should trigger a uML error, but your interpreter inferred type "".
given kmcneely test  1, kmcneely passed
given kmcneely test  1, jaltre01 passed
given kmcneely test  1, rmonde01 passed
given kmcneely test  1, xzhang01 passed
given kmcneely test  1, jkenne05 passed
given kmcneely test  1, hnasar01 passed
given kmcneely test  1, jpearl05 passed
given kmcneely test  1, mdarsn01 typed-untypeable -- Term "(lambda (f) (f f))" should trigger a uML error, but your interpreter inferred type "forall 'a, 'b . ('a -> 'b) -> 'b".
given kmcneely test  1, tsoule01 passed
given kmcneely test  1, agallant passed
given kmcneely test  1, adreyf01 passed
given kmcneely test  1, jwoold01 errored -- Term "(lambda (f) (f f))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given kmcneely test  1, dkass01  passed
given kmcneely test  1, asamps01 passed
given kmcneely test  1, jbryan04 errored -- Term "(lambda (f) (f f))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given kmcneely test  1, nbugas01 passed
given kmcneely test  1, mleise01 passed
given kmcneely test  2, mrusse03 passed
given kmcneely test  2, hlin02   passed
given kmcneely test  2, esalow01 passed
given kmcneely test  2, bkolta01 passed
given kmcneely test  2, gong01   passed
given kmcneely test  2, nr       typed-untypeable -- Term "(curry filter null?)" should trigger a uML error, but your interpreter inferred type "".
given kmcneely test  2, kmcneely passed
given kmcneely test  2, jaltre01 passed
given kmcneely test  2, rmonde01 passed
given kmcneely test  2, xzhang01 passed
given kmcneely test  2, jkenne05 passed
given kmcneely test  2, hnasar01 passed
given kmcneely test  2, jpearl05 passed
given kmcneely test  2, mdarsn01 passed
given kmcneely test  2, tsoule01 passed
given kmcneely test  2, agallant passed
given kmcneely test  2, adreyf01 passed
given kmcneely test  2, jwoold01 errored -- Term "(curry filter null?)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given kmcneely test  2, dkass01  passed
given kmcneely test  2, asamps01 passed
given kmcneely test  2, jbryan04 errored -- Term "(curry filter null?)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given kmcneely test  2, nbugas01 passed
given kmcneely test  2, mleise01 passed
given kmcneely test  3, mrusse03 passed
given kmcneely test  3, hlin02   passed
given kmcneely test  3, esalow01 passed
given kmcneely test  3, bkolta01 passed
given kmcneely test  3, gong01   passed
given kmcneely test  3, nr       typed-untypeable -- Term "(() ((42)))" should trigger a uML error, but your interpreter inferred type "".
given kmcneely test  3, kmcneely passed
given kmcneely test  3, jaltre01 passed
given kmcneely test  3, rmonde01 passed
given kmcneely test  3, xzhang01 passed
given kmcneely test  3, jkenne05 passed
given kmcneely test  3, hnasar01 passed
given kmcneely test  3, jpearl05 passed
given kmcneely test  3, mdarsn01 passed
given kmcneely test  3, tsoule01 passed
given kmcneely test  3, agallant passed
given kmcneely test  3, adreyf01 passed
given kmcneely test  3, jwoold01 errored -- Term "(() ((42)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given kmcneely test  3, dkass01  passed
given kmcneely test  3, asamps01 passed
given kmcneely test  3, jbryan04 errored -- Term "(() ((42)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given kmcneely test  3, nbugas01 passed
given kmcneely test  3, mleise01 passed
given jaltre01 test  1, mrusse03 passed
given jaltre01 test  1, hlin02   passed
given jaltre01 test  1, esalow01 passed
given jaltre01 test  1, bkolta01 passed
given jaltre01 test  1, gong01   passed
given jaltre01 test  1, nr       typed-incorrectly -- Term "(letrec ((x (lambda (y) y))(z (lambda (y) (x y)))) (z 3))" should have type "int", but your interpreter inferred type "".
given jaltre01 test  1, kmcneely passed
given jaltre01 test  1, jaltre01 did-not-type -- Term "(letrec ((x (lambda (y) y))(z (lambda (y) (x y)))) (z 3))" should have type "int", but your interpreter failed with the message "variable x not found".
given jaltre01 test  1, rmonde01 passed
given jaltre01 test  1, xzhang01 passed
given jaltre01 test  1, jkenne05 passed
given jaltre01 test  1, hnasar01 typed-incorrectly -- Term "(letrec ((x (lambda (y) y))(z (lambda (y) (x y)))) (z 3))" should have type "int", but your interpreter inferred type "forall 'a . 'a".
given jaltre01 test  1, jpearl05 passed
given jaltre01 test  1, mdarsn01 passed
given jaltre01 test  1, tsoule01 passed
given jaltre01 test  1, agallant passed
given jaltre01 test  1, adreyf01 typed-incorrectly -- Term "(letrec ((x (lambda (y) y))(z (lambda (y) (x y)))) (z 3))" should have type "int", but your interpreter inferred type "forall 'a . 'a".
given jaltre01 test  1, jwoold01 errored -- Term "(letrec ((x (lambda (y) y))(z (lambda (y) (x y)))) (z 3))" should have type "int", but your interpreter failed with an uncaught exception.
given jaltre01 test  1, dkass01  passed
given jaltre01 test  1, asamps01 passed
given jaltre01 test  1, jbryan04 errored -- Term "(letrec ((x (lambda (y) y))(z (lambda (y) (x y)))) (z 3))" should have type "int", but your interpreter failed with an uncaught exception.
given jaltre01 test  1, nbugas01 passed
given jaltre01 test  1, mleise01 typed-incorrectly -- Term "(letrec ((x (lambda (y) y))(z (lambda (y) (x y)))) (z 3))" should have type "int", but your interpreter inferred type "forall 'a . 'a".
given jaltre01 test  2, mrusse03 passed
given jaltre01 test  2, hlin02   passed
given jaltre01 test  2, esalow01 passed
given jaltre01 test  2, bkolta01 passed
given jaltre01 test  2, gong01   passed
given jaltre01 test  2, nr       typed-untypeable -- Term "(let ((x 5)(weird (lambda (l y z) (cons x y)))) 9)" should trigger a uML error, but your interpreter inferred type "".
given jaltre01 test  2, kmcneely passed
given jaltre01 test  2, jaltre01 passed
given jaltre01 test  2, rmonde01 passed
given jaltre01 test  2, xzhang01 passed
given jaltre01 test  2, jkenne05 passed
given jaltre01 test  2, hnasar01 passed
given jaltre01 test  2, jpearl05 passed
given jaltre01 test  2, mdarsn01 passed
given jaltre01 test  2, tsoule01 passed
given jaltre01 test  2, agallant passed
given jaltre01 test  2, adreyf01 passed
given jaltre01 test  2, jwoold01 errored -- Term "(let ((x 5)(weird (lambda (l y z) (cons x y)))) 9)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given jaltre01 test  2, dkass01  passed
given jaltre01 test  2, asamps01 passed
given jaltre01 test  2, jbryan04 errored -- Term "(let ((x 5)(weird (lambda (l y z) (cons x y)))) 9)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given jaltre01 test  2, nbugas01 passed
given jaltre01 test  2, mleise01 passed
given jaltre01 test  3, mrusse03 passed
given jaltre01 test  3, hlin02   passed
given jaltre01 test  3, esalow01 passed
given jaltre01 test  3, bkolta01 passed
given jaltre01 test  3, gong01   passed
given jaltre01 test  3, nr       typed-untypeable -- Term "(letrec ((x (lambda (y) (+ y y)))) (x #f))" should trigger a uML error, but your interpreter inferred type "".
given jaltre01 test  3, kmcneely passed
given jaltre01 test  3, jaltre01 passed
given jaltre01 test  3, rmonde01 passed
given jaltre01 test  3, xzhang01 passed
given jaltre01 test  3, jkenne05 passed
given jaltre01 test  3, hnasar01 passed
given jaltre01 test  3, jpearl05 passed
given jaltre01 test  3, mdarsn01 passed
given jaltre01 test  3, tsoule01 passed
given jaltre01 test  3, agallant passed
given jaltre01 test  3, adreyf01 passed
given jaltre01 test  3, jwoold01 errored -- Term "(letrec ((x (lambda (y) (+ y y)))) (x #f))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given jaltre01 test  3, dkass01  passed
given jaltre01 test  3, asamps01 passed
given jaltre01 test  3, jbryan04 errored -- Term "(letrec ((x (lambda (y) (+ y y)))) (x #f))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given jaltre01 test  3, nbugas01 passed
given jaltre01 test  3, mleise01 passed
given rmonde01 test  1, mrusse03 passed
given rmonde01 test  1, hlin02   passed
given rmonde01 test  1, esalow01 passed
given rmonde01 test  1, bkolta01 passed
given rmonde01 test  1, gong01   passed
given rmonde01 test  1, nr       typed-untypeable -- Term "(schfifty 5)" should trigger a uML error, but your interpreter inferred type "".
given rmonde01 test  1, kmcneely passed
given rmonde01 test  1, jaltre01 passed
given rmonde01 test  1, rmonde01 passed
given rmonde01 test  1, xzhang01 passed
given rmonde01 test  1, jkenne05 passed
given rmonde01 test  1, hnasar01 passed
given rmonde01 test  1, jpearl05 passed
given rmonde01 test  1, mdarsn01 passed
given rmonde01 test  1, tsoule01 passed
given rmonde01 test  1, agallant passed
given rmonde01 test  1, adreyf01 passed
given rmonde01 test  1, jwoold01 errored -- Term "(schfifty 5)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given rmonde01 test  1, dkass01  passed
given rmonde01 test  1, asamps01 passed
given rmonde01 test  1, jbryan04 errored -- Term "(schfifty 5)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given rmonde01 test  1, nbugas01 passed
given rmonde01 test  1, mleise01 passed
given rmonde01 test  2, mrusse03 passed
given rmonde01 test  2, hlin02   passed
given rmonde01 test  2, esalow01 passed
given rmonde01 test  2, bkolta01 passed
given rmonde01 test  2, gong01   passed
given rmonde01 test  2, nr       typed-untypeable -- Term "(cons '() 9001)" should trigger a uML error, but your interpreter inferred type "".
given rmonde01 test  2, kmcneely passed
given rmonde01 test  2, jaltre01 passed
given rmonde01 test  2, rmonde01 passed
given rmonde01 test  2, xzhang01 passed
given rmonde01 test  2, jkenne05 passed
given rmonde01 test  2, hnasar01 passed
given rmonde01 test  2, jpearl05 passed
given rmonde01 test  2, mdarsn01 passed
given rmonde01 test  2, tsoule01 passed
given rmonde01 test  2, agallant passed
given rmonde01 test  2, adreyf01 passed
given rmonde01 test  2, jwoold01 errored -- Term "(cons '() 9001)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given rmonde01 test  2, dkass01  passed
given rmonde01 test  2, asamps01 passed
given rmonde01 test  2, jbryan04 errored -- Term "(cons '() 9001)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given rmonde01 test  2, nbugas01 passed
given rmonde01 test  2, mleise01 passed
given rmonde01 test  3, mrusse03 passed
given rmonde01 test  3, hlin02   passed
given rmonde01 test  3, esalow01 passed
given rmonde01 test  3, bkolta01 passed
given rmonde01 test  3, gong01   passed
given rmonde01 test  3, nr       typed-incorrectly -- Term "(define id (x)  (letrec ((y (lambda (w) (z w)))           (z (lambda (q) q)))          y))" should have type "forall 'a, 'b . 'a -> ('b -> 'b)", but your interpreter inferred type "".
given rmonde01 test  3, kmcneely passed
given rmonde01 test  3, jaltre01 did-not-type -- Term "(define id (x)  (letrec ((y (lambda (w) (z w)))           (z (lambda (q) q)))          y))" should have type "forall 'a, 'b . 'a -> ('b -> 'b)", but your interpreter failed with the message "variable z not found".
given rmonde01 test  3, rmonde01 passed
given rmonde01 test  3, xzhang01 passed
given rmonde01 test  3, jkenne05 passed
given rmonde01 test  3, hnasar01 typed-incorrectly -- Term "(define id (x)  (letrec ((y (lambda (w) (z w)))           (z (lambda (q) q)))          y))" should have type "forall 'a, 'b . 'a -> ('b -> 'b)", but your interpreter inferred type "forall 'a, 'b, 'c . 'a -> ('b -> 'c)".
given rmonde01 test  3, jpearl05 passed
given rmonde01 test  3, mdarsn01 passed
given rmonde01 test  3, tsoule01 passed
given rmonde01 test  3, agallant passed
given rmonde01 test  3, adreyf01 typed-incorrectly -- Term "(define id (x)  (letrec ((y (lambda (w) (z w)))           (z (lambda (q) q)))          y))" should have type "forall 'a, 'b . 'a -> ('b -> 'b)", but your interpreter inferred type "forall 'a, 'b, 'c . 'a -> ('b -> 'c)".
given rmonde01 test  3, jwoold01 errored -- Term "(define id (x)  (letrec ((y (lambda (w) (z w)))           (z (lambda (q) q)))          y))" should have type "forall 'a, 'b . 'a -> ('b -> 'b)", but your interpreter failed with an uncaught exception.
given rmonde01 test  3, dkass01  passed
given rmonde01 test  3, asamps01 passed
given rmonde01 test  3, jbryan04 errored -- Term "(define id (x)  (letrec ((y (lambda (w) (z w)))           (z (lambda (q) q)))          y))" should have type "forall 'a, 'b . 'a -> ('b -> 'b)", but your interpreter failed with an uncaught exception.
given rmonde01 test  3, nbugas01 passed
given rmonde01 test  3, mleise01 typed-incorrectly -- Term "(define id (x)  (letrec ((y (lambda (w) (z w)))           (z (lambda (q) q)))          y))" should have type "forall 'a, 'b . 'a -> ('b -> 'b)", but your interpreter inferred type "forall 'a, 'b, 'c . 'a -> ('b -> 'c)".
given xzhang01 test  1, mrusse03 passed
given xzhang01 test  1, hlin02   passed
given xzhang01 test  1, esalow01 passed
given xzhang01 test  1, bkolta01 passed
given xzhang01 test  1, gong01   typed-incorrectly -- Term "(lambda (x xprime y z f) (if x (f y) (let ((app z) (foo x))                         (lambda (any) (if any (app foo) (app xprime))))))" should have type "forall 'a, 'b . bool * bool * 'a * (bool -> 'b) * ('a -> (bool -> 'b)) -> (bool -> 'b)", but your interpreter inferred type "forall 'a, 'b, 'c . bool * 'a * 'b * ('a -> 'c) * ('b -> (bool -> 'c)) -> (bool -> 'c)".
given xzhang01 test  1, nr       typed-incorrectly -- Term "(lambda (x xprime y z f) (if x (f y) (let ((app z) (foo x))                         (lambda (any) (if any (app foo) (app xprime))))))" should have type "forall 'a, 'b . bool * bool * 'a * (bool -> 'b) * ('a -> (bool -> 'b)) -> (bool -> 'b)", but your interpreter inferred type "".
given xzhang01 test  1, kmcneely passed
given xzhang01 test  1, jaltre01 typed-incorrectly -- Term "(lambda (x xprime y z f) (if x (f y) (let ((app z) (foo x))                         (lambda (any) (if any (app foo) (app xprime))))))" should have type "forall 'a, 'b . bool * bool * 'a * (bool -> 'b) * ('a -> (bool -> 'b)) -> (bool -> 'b)", but your interpreter inferred type "forall 'a, 'b, 'c, 'd, 'e . bool * 'a * 'b * 'c * 'd -> 'e".
given xzhang01 test  1, rmonde01 passed
given xzhang01 test  1, xzhang01 passed
given xzhang01 test  1, jkenne05 typed-incorrectly -- Term "(lambda (x xprime y z f) (if x (f y) (let ((app z) (foo x))                         (lambda (any) (if any (app foo) (app xprime))))))" should have type "forall 'a, 'b . bool * bool * 'a * (bool -> 'b) * ('a -> (bool -> 'b)) -> (bool -> 'b)", but your interpreter inferred type "forall 'a, 'b, 'c . bool * bool * 'a * (bool -> 'b) * ('a -> (bool -> 'b)) -> 'c".
given xzhang01 test  1, hnasar01 passed
given xzhang01 test  1, jpearl05 passed
given xzhang01 test  1, mdarsn01 typed-incorrectly -- Term "(lambda (x xprime y z f) (if x (f y) (let ((app z) (foo x))                         (lambda (any) (if any (app foo) (app xprime))))))" should have type "forall 'a, 'b . bool * bool * 'a * (bool -> 'b) * ('a -> (bool -> 'b)) -> (bool -> 'b)", but your interpreter inferred type "forall 'a, 'b, 'c, 'd, 'e, 'f, 'g . 'a * 'b * 'c * 'd * 'e -> ('f -> 'g)".
given xzhang01 test  1, tsoule01 passed
given xzhang01 test  1, agallant passed
given xzhang01 test  1, adreyf01 did-not-type -- Term "(lambda (x xprime y z f) (if x (f y) (let ((app z) (foo x))                         (lambda (any) (if any (app foo) (app xprime))))))" should have type "forall 'a, 'b . bool * bool * 'a * (bool -> 'b) * ('a -> (bool -> 'b)) -> (bool -> 'b)", but your interpreter failed with the message "type error: Cannot unify 'a * 'b and bool * 'b".
given xzhang01 test  1, jwoold01 errored -- Term "(lambda (x xprime y z f) (if x (f y) (let ((app z) (foo x))                         (lambda (any) (if any (app foo) (app xprime))))))" should have type "forall 'a, 'b . bool * bool * 'a * (bool -> 'b) * ('a -> (bool -> 'b)) -> (bool -> 'b)", but your interpreter failed with an uncaught exception.
given xzhang01 test  1, dkass01  passed
given xzhang01 test  1, asamps01 typed-incorrectly -- Term "(lambda (x xprime y z f) (if x (f y) (let ((app z) (foo x))                         (lambda (any) (if any (app foo) (app xprime))))))" should have type "forall 'a, 'b . bool * bool * 'a * (bool -> 'b) * ('a -> (bool -> 'b)) -> (bool -> 'b)", but your interpreter inferred type "forall 'a, 'b, 'c . bool * 'a * 'b * ('a -> 'c) * ('b -> (bool -> 'c)) -> (bool -> 'c)".
given xzhang01 test  1, jbryan04 errored -- Term "(lambda (x xprime y z f) (if x (f y) (let ((app z) (foo x))                         (lambda (any) (if any (app foo) (app xprime))))))" should have type "forall 'a, 'b . bool * bool * 'a * (bool -> 'b) * ('a -> (bool -> 'b)) -> (bool -> 'b)", but your interpreter failed with an uncaught exception.
given xzhang01 test  1, nbugas01 passed
given xzhang01 test  1, mleise01 passed
given xzhang01 test  2, mrusse03 passed
given xzhang01 test  2, hlin02   passed
given xzhang01 test  2, esalow01 passed
given xzhang01 test  2, bkolta01 passed
given xzhang01 test  2, gong01   passed
given xzhang01 test  2, nr       typed-untypeable -- Term "(letrec ((+ (lambda (x y) (and x y))) (foo (lambda (x y) (+ x y)))) (foo 1 2))" should trigger a uML error, but your interpreter inferred type "".
given xzhang01 test  2, kmcneely passed
given xzhang01 test  2, jaltre01 typed-untypeable -- Term "(letrec ((+ (lambda (x y) (and x y))) (foo (lambda (x y) (+ x y)))) (foo 1 2))" should trigger a uML error, but your interpreter inferred type "int".
given xzhang01 test  2, rmonde01 passed
given xzhang01 test  2, xzhang01 passed
given xzhang01 test  2, jkenne05 passed
given xzhang01 test  2, hnasar01 typed-untypeable -- Term "(letrec ((+ (lambda (x y) (and x y))) (foo (lambda (x y) (+ x y)))) (foo 1 2))" should trigger a uML error, but your interpreter inferred type "forall 'a . 'a".
given xzhang01 test  2, jpearl05 passed
given xzhang01 test  2, mdarsn01 passed
given xzhang01 test  2, tsoule01 passed
given xzhang01 test  2, agallant passed
given xzhang01 test  2, adreyf01 typed-untypeable -- Term "(letrec ((+ (lambda (x y) (and x y))) (foo (lambda (x y) (+ x y)))) (foo 1 2))" should trigger a uML error, but your interpreter inferred type "forall 'a . 'a".
given xzhang01 test  2, jwoold01 errored -- Term "(letrec ((+ (lambda (x y) (and x y))) (foo (lambda (x y) (+ x y)))) (foo 1 2))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given xzhang01 test  2, dkass01  passed
given xzhang01 test  2, asamps01 passed
given xzhang01 test  2, jbryan04 errored -- Term "(letrec ((+ (lambda (x y) (and x y))) (foo (lambda (x y) (+ x y)))) (foo 1 2))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given xzhang01 test  2, nbugas01 passed
given xzhang01 test  2, mleise01 typed-untypeable -- Term "(letrec ((+ (lambda (x y) (and x y))) (foo (lambda (x y) (+ x y)))) (foo 1 2))" should trigger a uML error, but your interpreter inferred type "forall 'a . 'a".
given xzhang01 test  3, mrusse03 passed
given xzhang01 test  3, hlin02   passed
given xzhang01 test  3, esalow01 passed
given xzhang01 test  3, bkolta01 passed
given xzhang01 test  3, gong01   passed
given xzhang01 test  3, nr       typed-untypeable -- Term "(val a (lambda (a) (pair (cons a '(#t)) (cons a '(1)))))" should trigger a uML error, but your interpreter inferred type "".
given xzhang01 test  3, kmcneely passed
given xzhang01 test  3, jaltre01 passed
given xzhang01 test  3, rmonde01 passed
given xzhang01 test  3, xzhang01 passed
given xzhang01 test  3, jkenne05 passed
given xzhang01 test  3, hnasar01 passed
given xzhang01 test  3, jpearl05 passed
given xzhang01 test  3, mdarsn01 passed
given xzhang01 test  3, tsoule01 passed
given xzhang01 test  3, agallant passed
given xzhang01 test  3, adreyf01 passed
given xzhang01 test  3, jwoold01 errored -- Term "(val a (lambda (a) (pair (cons a '(#t)) (cons a '(1)))))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given xzhang01 test  3, dkass01  passed
given xzhang01 test  3, asamps01 passed
given xzhang01 test  3, jbryan04 errored -- Term "(val a (lambda (a) (pair (cons a '(#t)) (cons a '(1)))))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given xzhang01 test  3, nbugas01 passed
given xzhang01 test  3, mleise01 passed
given jkenne05 test  1, mrusse03 passed
given jkenne05 test  1, hlin02   passed
given jkenne05 test  1, esalow01 passed
given jkenne05 test  1, bkolta01 passed
given jkenne05 test  1, gong01   passed
given jkenne05 test  1, nr       typed-untypeable -- Term "(lambda (x) (let ((b (+ x 1))) (and (= b 1) x)))" should trigger a uML error, but your interpreter inferred type "".
given jkenne05 test  1, kmcneely typed-untypeable -- Term "(lambda (x) (let ((b (+ x 1))) (and (= b 1) x)))" should trigger a uML error, but your interpreter inferred type "int -> bool".
given jkenne05 test  1, jaltre01 typed-untypeable -- Term "(lambda (x) (let ((b (+ x 1))) (and (= b 1) x)))" should trigger a uML error, but your interpreter inferred type "bool -> bool".
given jkenne05 test  1, rmonde01 passed
given jkenne05 test  1, xzhang01 passed
given jkenne05 test  1, jkenne05 passed
given jkenne05 test  1, hnasar01 passed
given jkenne05 test  1, jpearl05 passed
given jkenne05 test  1, mdarsn01 typed-untypeable -- Term "(lambda (x) (let ((b (+ x 1))) (and (= b 1) x)))" should trigger a uML error, but your interpreter inferred type "int -> int".
given jkenne05 test  1, tsoule01 passed
given jkenne05 test  1, agallant passed
given jkenne05 test  1, adreyf01 passed
given jkenne05 test  1, jwoold01 errored -- Term "(lambda (x) (let ((b (+ x 1))) (and (= b 1) x)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given jkenne05 test  1, dkass01  passed
given jkenne05 test  1, asamps01 passed
given jkenne05 test  1, jbryan04 errored -- Term "(lambda (x) (let ((b (+ x 1))) (and (= b 1) x)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given jkenne05 test  1, nbugas01 passed
given jkenne05 test  1, mleise01 typed-untypeable -- Term "(lambda (x) (let ((b (+ x 1))) (and (= b 1) x)))" should trigger a uML error, but your interpreter inferred type "bool -> bool".
given jkenne05 test  2, mrusse03 passed
given jkenne05 test  2, hlin02   passed
given jkenne05 test  2, esalow01 passed
given jkenne05 test  2, bkolta01 passed
given jkenne05 test  2, gong01   passed
given jkenne05 test  2, nr       passed
given jkenne05 test  2, kmcneely passed
given jkenne05 test  2, jaltre01 passed
given jkenne05 test  2, rmonde01 passed
given jkenne05 test  2, xzhang01 passed
given jkenne05 test  2, jkenne05 passed
given jkenne05 test  2, hnasar01 passed
given jkenne05 test  2, jpearl05 passed
given jkenne05 test  2, mdarsn01 passed
given jkenne05 test  2, tsoule01 passed
given jkenne05 test  2, agallant passed
given jkenne05 test  2, adreyf01 passed
given jkenne05 test  2, jwoold01 errored -- Term "(val qsort (lambda (lt)  (letrec     ((sort (lambda (xs tail)  ; return elements of xs (sorted) followed by tail                (if (null? xs) tail                    (let* ((pivot  (car xs))                           (rest   (cdr xs))                           (right? ((curry lt) pivot))                           (left?  (o not right?)))                       (sort (filter left? rest)                              (cons pivot (sort (filter right? rest) tail))))))))     (lambda (xs) (sort xs '())))))" should have type "", but your interpreter failed with an uncaught exception.
given jkenne05 test  2, dkass01  passed
given jkenne05 test  2, asamps01 passed
given jkenne05 test  2, jbryan04 errored -- Term "(val qsort (lambda (lt)  (letrec     ((sort (lambda (xs tail)  ; return elements of xs (sorted) followed by tail                (if (null? xs) tail                    (let* ((pivot  (car xs))                           (rest   (cdr xs))                           (right? ((curry lt) pivot))                           (left?  (o not right?)))                       (sort (filter left? rest)                              (cons pivot (sort (filter right? rest) tail))))))))     (lambda (xs) (sort xs '())))))" should have type "", but your interpreter failed with an uncaught exception.
given jkenne05 test  2, nbugas01 passed
given jkenne05 test  2, mleise01 passed
given jkenne05 test  3, mrusse03 passed
given jkenne05 test  3, hlin02   passed
given jkenne05 test  3, esalow01 passed
given jkenne05 test  3, bkolta01 passed
given jkenne05 test  3, gong01   passed
given jkenne05 test  3, nr       typed-untypeable -- Term "(lambda (x) (begin (+ x 1) (if x 0 1)))" should trigger a uML error, but your interpreter inferred type "".
given jkenne05 test  3, kmcneely passed
given jkenne05 test  3, jaltre01 typed-untypeable -- Term "(lambda (x) (begin (+ x 1) (if x 0 1)))" should trigger a uML error, but your interpreter inferred type "forall 'a . 'a -> int".
given jkenne05 test  3, rmonde01 passed
given jkenne05 test  3, xzhang01 passed
given jkenne05 test  3, jkenne05 passed
given jkenne05 test  3, hnasar01 passed
given jkenne05 test  3, jpearl05 passed
given jkenne05 test  3, mdarsn01 passed
given jkenne05 test  3, tsoule01 passed
given jkenne05 test  3, agallant passed
given jkenne05 test  3, adreyf01 passed
given jkenne05 test  3, jwoold01 errored -- Term "(lambda (x) (begin (+ x 1) (if x 0 1)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given jkenne05 test  3, dkass01  passed
given jkenne05 test  3, asamps01 passed
given jkenne05 test  3, jbryan04 errored -- Term "(lambda (x) (begin (+ x 1) (if x 0 1)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given jkenne05 test  3, nbugas01 typed-untypeable -- Term "(lambda (x) (begin (+ x 1) (if x 0 1)))" should trigger a uML error, but your interpreter inferred type "forall 'a . 'a -> int".
given jkenne05 test  3, mleise01 passed
given hnasar01 test  1, mrusse03 passed
given hnasar01 test  1, hlin02   typed-incorrectly -- Term "(val-rec test1 (lambda (y)  (letrec ((z (lambda (a) (if (= 0 a) 0 (+ a ((o z test1) (- a 1))))))) (z y))))" should have type "int -> int", but your interpreter inferred type "forall 'a . 'a -> int".
given hnasar01 test  1, esalow01 passed
given hnasar01 test  1, bkolta01 passed
given hnasar01 test  1, gong01   passed
given hnasar01 test  1, nr       typed-incorrectly -- Term "(val-rec test1 (lambda (y)  (letrec ((z (lambda (a) (if (= 0 a) 0 (+ a ((o z test1) (- a 1))))))) (z y))))" should have type "int -> int", but your interpreter inferred type "".
given hnasar01 test  1, kmcneely passed
given hnasar01 test  1, jaltre01 did-not-type -- Term "(val-rec test1 (lambda (y)  (letrec ((z (lambda (a) (if (= 0 a) 0 (+ a ((o z test1) (- a 1))))))) (z y))))" should have type "int -> int", but your interpreter failed with the message "variable z not found".
given hnasar01 test  1, rmonde01 passed
given hnasar01 test  1, xzhang01 passed
given hnasar01 test  1, jkenne05 passed
given hnasar01 test  1, hnasar01 passed
given hnasar01 test  1, jpearl05 passed
given hnasar01 test  1, mdarsn01 typed-incorrectly -- Term "(val-rec test1 (lambda (y)  (letrec ((z (lambda (a) (if (= 0 a) 0 (+ a ((o z test1) (- a 1))))))) (z y))))" should have type "int -> int", but your interpreter inferred type "forall 'a . 'a -> int".
given hnasar01 test  1, tsoule01 passed
given hnasar01 test  1, agallant passed
given hnasar01 test  1, adreyf01 did-not-type -- Term "(val-rec test1 (lambda (y)  (letrec ((z (lambda (a) (if (= 0 a) 0 (+ a ((o z test1) (- a 1))))))) (z y))))" should have type "int -> int", but your interpreter failed with the message "type error: Cannot unify int * int and int * int".
given hnasar01 test  1, jwoold01 errored -- Term "(val-rec test1 (lambda (y)  (letrec ((z (lambda (a) (if (= 0 a) 0 (+ a ((o z test1) (- a 1))))))) (z y))))" should have type "int -> int", but your interpreter failed with an uncaught exception.
given hnasar01 test  1, dkass01  passed
given hnasar01 test  1, asamps01 passed
given hnasar01 test  1, jbryan04 errored -- Term "(val-rec test1 (lambda (y)  (letrec ((z (lambda (a) (if (= 0 a) 0 (+ a ((o z test1) (- a 1))))))) (z y))))" should have type "int -> int", but your interpreter failed with an uncaught exception.
given hnasar01 test  1, nbugas01 passed
given hnasar01 test  1, mleise01 passed
given hnasar01 test  2, mrusse03 passed
given hnasar01 test  2, hlin02   passed
given hnasar01 test  2, esalow01 passed
given hnasar01 test  2, bkolta01 passed
given hnasar01 test  2, gong01   passed
given hnasar01 test  2, nr       typed-untypeable -- Term "(val-rec test2 (lambda (y) (letrec ((z (lambda (a) (if (= 0 a) 0 (+ a ((z o test2) (- a 1))))))) (z y))))" should trigger a uML error, but your interpreter inferred type "".
given hnasar01 test  2, kmcneely passed
given hnasar01 test  2, jaltre01 passed
given hnasar01 test  2, rmonde01 passed
given hnasar01 test  2, xzhang01 passed
given hnasar01 test  2, jkenne05 passed
given hnasar01 test  2, hnasar01 typed-untypeable -- Term "(val-rec test2 (lambda (y) (letrec ((z (lambda (a) (if (= 0 a) 0 (+ a ((z o test2) (- a 1))))))) (z y))))" should trigger a uML error, but your interpreter inferred type "int -> int".
given hnasar01 test  2, jpearl05 passed
given hnasar01 test  2, mdarsn01 typed-untypeable -- Term "(val-rec test2 (lambda (y) (letrec ((z (lambda (a) (if (= 0 a) 0 (+ a ((z o test2) (- a 1))))))) (z y))))" should trigger a uML error, but your interpreter inferred type "forall 'a . 'a -> int".
given hnasar01 test  2, tsoule01 passed
given hnasar01 test  2, agallant passed
given hnasar01 test  2, adreyf01 passed
given hnasar01 test  2, jwoold01 errored -- Term "(val-rec test2 (lambda (y) (letrec ((z (lambda (a) (if (= 0 a) 0 (+ a ((z o test2) (- a 1))))))) (z y))))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given hnasar01 test  2, dkass01  passed
given hnasar01 test  2, asamps01 passed
given hnasar01 test  2, jbryan04 errored -- Term "(val-rec test2 (lambda (y) (letrec ((z (lambda (a) (if (= 0 a) 0 (+ a ((z o test2) (- a 1))))))) (z y))))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given hnasar01 test  2, nbugas01 passed
given hnasar01 test  2, mleise01 passed
given hnasar01 test  3, mrusse03 passed
given hnasar01 test  3, hlin02   passed
given hnasar01 test  3, esalow01 passed
given hnasar01 test  3, bkolta01 passed
given hnasar01 test  3, gong01   errored -- Term "(define test3 (x) (if (= 0 x) 0 (+ x (test3 o test3) (- x 1))))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given hnasar01 test  3, nr       typed-untypeable -- Term "(define test3 (x) (if (= 0 x) 0 (+ x (test3 o test3) (- x 1))))" should trigger a uML error, but your interpreter inferred type "".
given hnasar01 test  3, kmcneely passed
given hnasar01 test  3, jaltre01 passed
given hnasar01 test  3, rmonde01 passed
given hnasar01 test  3, xzhang01 passed
given hnasar01 test  3, jkenne05 passed
given hnasar01 test  3, hnasar01 passed
given hnasar01 test  3, jpearl05 passed
given hnasar01 test  3, mdarsn01 passed
given hnasar01 test  3, tsoule01 passed
given hnasar01 test  3, agallant passed
given hnasar01 test  3, adreyf01 passed
given hnasar01 test  3, jwoold01 errored -- Term "(define test3 (x) (if (= 0 x) 0 (+ x (test3 o test3) (- x 1))))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given hnasar01 test  3, dkass01  passed
given hnasar01 test  3, asamps01 passed
given hnasar01 test  3, jbryan04 errored -- Term "(define test3 (x) (if (= 0 x) 0 (+ x (test3 o test3) (- x 1))))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given hnasar01 test  3, nbugas01 passed
given hnasar01 test  3, mleise01 passed
given jpearl05 test  1, mrusse03 passed
given jpearl05 test  1, hlin02   passed
given jpearl05 test  1, esalow01 passed
given jpearl05 test  1, bkolta01 passed
given jpearl05 test  1, gong01   passed
given jpearl05 test  1, nr       typed-incorrectly -- Term "(letrec ((func (lambda (a b num) (if a b (+ 1 num))))) func)" should have type "bool * int * int -> int", but your interpreter inferred type "".
given jpearl05 test  1, kmcneely passed
given jpearl05 test  1, jaltre01 typed-incorrectly -- Term "(letrec ((func (lambda (a b num) (if a b (+ 1 num))))) func)" should have type "bool * int * int -> int", but your interpreter inferred type "forall 'a . bool * int * 'a -> int".
given jpearl05 test  1, rmonde01 passed
given jpearl05 test  1, xzhang01 passed
given jpearl05 test  1, jkenne05 typed-incorrectly -- Term "(letrec ((func (lambda (a b num) (if a b (+ 1 num))))) func)" should have type "bool * int * int -> int", but your interpreter inferred type "forall 'a . bool * int * int -> 'a".
given jpearl05 test  1, hnasar01 passed
given jpearl05 test  1, jpearl05 passed
given jpearl05 test  1, mdarsn01 typed-incorrectly -- Term "(letrec ((func (lambda (a b num) (if a b (+ 1 num))))) func)" should have type "bool * int * int -> int", but your interpreter inferred type "forall 'a, 'b . 'a * int * 'b -> int".
given jpearl05 test  1, tsoule01 passed
given jpearl05 test  1, agallant passed
given jpearl05 test  1, adreyf01 passed
given jpearl05 test  1, jwoold01 errored -- Term "(letrec ((func (lambda (a b num) (if a b (+ 1 num))))) func)" should have type "bool * int * int -> int", but your interpreter failed with an uncaught exception.
given jpearl05 test  1, dkass01  passed
given jpearl05 test  1, asamps01 passed
given jpearl05 test  1, jbryan04 errored -- Term "(letrec ((func (lambda (a b num) (if a b (+ 1 num))))) func)" should have type "bool * int * int -> int", but your interpreter failed with an uncaught exception.
given jpearl05 test  1, nbugas01 passed
given jpearl05 test  1, mleise01 passed
given jpearl05 test  2, mrusse03 passed
given jpearl05 test  2, hlin02   passed
given jpearl05 test  2, esalow01 passed
given jpearl05 test  2, bkolta01 passed
given jpearl05 test  2, gong01   passed
given jpearl05 test  2, nr       typed-untypeable -- Term "(letrec ((func (lambda (a b num) (if a #t (+ 1 num))))) func)" should trigger a uML error, but your interpreter inferred type "".
given jpearl05 test  2, kmcneely passed
given jpearl05 test  2, jaltre01 passed
given jpearl05 test  2, rmonde01 passed
given jpearl05 test  2, xzhang01 passed
given jpearl05 test  2, jkenne05 passed
given jpearl05 test  2, hnasar01 passed
given jpearl05 test  2, jpearl05 passed
given jpearl05 test  2, mdarsn01 passed
given jpearl05 test  2, tsoule01 passed
given jpearl05 test  2, agallant passed
given jpearl05 test  2, adreyf01 passed
given jpearl05 test  2, jwoold01 errored -- Term "(letrec ((func (lambda (a b num) (if a #t (+ 1 num))))) func)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given jpearl05 test  2, dkass01  passed
given jpearl05 test  2, asamps01 passed
given jpearl05 test  2, jbryan04 errored -- Term "(letrec ((func (lambda (a b num) (if a #t (+ 1 num))))) func)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given jpearl05 test  2, nbugas01 passed
given jpearl05 test  2, mleise01 passed
given jpearl05 test  3, mrusse03 passed
given jpearl05 test  3, hlin02   passed
given jpearl05 test  3, esalow01 passed
given jpearl05 test  3, bkolta01 passed
given jpearl05 test  3, gong01   passed
given jpearl05 test  3, nr       typed-untypeable -- Term "(takewhile ((curry all?) 1) '(1 #t))" should trigger a uML error, but your interpreter inferred type "".
given jpearl05 test  3, kmcneely passed
given jpearl05 test  3, jaltre01 passed
given jpearl05 test  3, rmonde01 passed
given jpearl05 test  3, xzhang01 passed
given jpearl05 test  3, jkenne05 passed
given jpearl05 test  3, hnasar01 passed
given jpearl05 test  3, jpearl05 passed
given jpearl05 test  3, mdarsn01 passed
given jpearl05 test  3, tsoule01 passed
given jpearl05 test  3, agallant passed
given jpearl05 test  3, adreyf01 passed
given jpearl05 test  3, jwoold01 errored -- Term "(takewhile ((curry all?) 1) '(1 #t))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given jpearl05 test  3, dkass01  passed
given jpearl05 test  3, asamps01 passed
given jpearl05 test  3, jbryan04 errored -- Term "(takewhile ((curry all?) 1) '(1 #t))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given jpearl05 test  3, nbugas01 passed
given jpearl05 test  3, mleise01 passed
given mdarsn01 test  1, mrusse03 passed
given mdarsn01 test  1, hlin02   passed
given mdarsn01 test  1, esalow01 passed
given mdarsn01 test  1, bkolta01 passed
given mdarsn01 test  1, gong01   passed
given mdarsn01 test  1, nr       typed-incorrectly -- Term "(val win (lambda (x) (letrec ((b (lambda (y) (+ y 1)))) (b x))))" should have type "int -> int", but your interpreter inferred type "".
given mdarsn01 test  1, kmcneely passed
given mdarsn01 test  1, jaltre01 passed
given mdarsn01 test  1, rmonde01 passed
given mdarsn01 test  1, xzhang01 passed
given mdarsn01 test  1, jkenne05 passed
given mdarsn01 test  1, hnasar01 passed
given mdarsn01 test  1, jpearl05 passed
given mdarsn01 test  1, mdarsn01 passed
given mdarsn01 test  1, tsoule01 passed
given mdarsn01 test  1, agallant passed
given mdarsn01 test  1, adreyf01 did-not-type -- Term "(val win (lambda (x) (letrec ((b (lambda (y) (+ y 1)))) (b x))))" should have type "int -> int", but your interpreter failed with the message "type error: Cannot unify int * int and 'a * int".
given mdarsn01 test  1, jwoold01 errored -- Term "(val win (lambda (x) (letrec ((b (lambda (y) (+ y 1)))) (b x))))" should have type "int -> int", but your interpreter failed with an uncaught exception.
given mdarsn01 test  1, dkass01  passed
given mdarsn01 test  1, asamps01 passed
given mdarsn01 test  1, jbryan04 errored -- Term "(val win (lambda (x) (letrec ((b (lambda (y) (+ y 1)))) (b x))))" should have type "int -> int", but your interpreter failed with an uncaught exception.
given mdarsn01 test  1, nbugas01 passed
given mdarsn01 test  1, mleise01 passed
given mdarsn01 test  2, mrusse03 passed
given mdarsn01 test  2, hlin02   passed
given mdarsn01 test  2, esalow01 passed
given mdarsn01 test  2, bkolta01 passed
given mdarsn01 test  2, gong01   passed
given mdarsn01 test  2, nr       typed-untypeable -- Term "(define foo (a b) (letrec ((d (+ a 4))(e (if b 2 a))) (d e)))" should trigger a uML error, but your interpreter inferred type "".
given mdarsn01 test  2, kmcneely passed
given mdarsn01 test  2, jaltre01 passed
given mdarsn01 test  2, rmonde01 passed
given mdarsn01 test  2, xzhang01 passed
given mdarsn01 test  2, jkenne05 passed
given mdarsn01 test  2, hnasar01 passed
given mdarsn01 test  2, jpearl05 passed
given mdarsn01 test  2, mdarsn01 passed
given mdarsn01 test  2, tsoule01 passed
given mdarsn01 test  2, agallant passed
given mdarsn01 test  2, adreyf01 passed
given mdarsn01 test  2, jwoold01 errored -- Term "(define foo (a b) (letrec ((d (+ a 4))(e (if b 2 a))) (d e)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given mdarsn01 test  2, dkass01  passed
given mdarsn01 test  2, asamps01 passed
given mdarsn01 test  2, jbryan04 errored -- Term "(define foo (a b) (letrec ((d (+ a 4))(e (if b 2 a))) (d e)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given mdarsn01 test  2, nbugas01 passed
given mdarsn01 test  2, mleise01 passed
given mdarsn01 test  3, mrusse03 passed
given mdarsn01 test  3, hlin02   passed
given mdarsn01 test  3, esalow01 passed
given mdarsn01 test  3, bkolta01 passed
given mdarsn01 test  3, gong01   typed-untypeable -- Term "(define newimpossible (f b) (if b (f b) f))" should trigger a uML error, but your interpreter inferred type "forall 'a . (bool -> 'a) * bool -> (bool -> 'a)".
given mdarsn01 test  3, nr       typed-untypeable -- Term "(define newimpossible (f b) (if b (f b) f))" should trigger a uML error, but your interpreter inferred type "".
given mdarsn01 test  3, kmcneely passed
given mdarsn01 test  3, jaltre01 typed-untypeable -- Term "(define newimpossible (f b) (if b (f b) f))" should trigger a uML error, but your interpreter inferred type "forall 'a, 'b . 'a * bool -> 'b".
given mdarsn01 test  3, rmonde01 passed
given mdarsn01 test  3, xzhang01 passed
given mdarsn01 test  3, jkenne05 passed
given mdarsn01 test  3, hnasar01 passed
given mdarsn01 test  3, jpearl05 passed
given mdarsn01 test  3, mdarsn01 typed-untypeable -- Term "(define newimpossible (f b) (if b (f b) f))" should trigger a uML error, but your interpreter inferred type "forall 'a, 'b . 'a * 'b -> 'b".
given mdarsn01 test  3, tsoule01 passed
given mdarsn01 test  3, agallant passed
given mdarsn01 test  3, adreyf01 passed
given mdarsn01 test  3, jwoold01 errored -- Term "(define newimpossible (f b) (if b (f b) f))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given mdarsn01 test  3, dkass01  passed
given mdarsn01 test  3, asamps01 typed-untypeable -- Term "(define newimpossible (f b) (if b (f b) f))" should trigger a uML error, but your interpreter inferred type "forall 'a . (bool -> 'a) * bool -> (bool -> 'a)".
given mdarsn01 test  3, jbryan04 errored -- Term "(define newimpossible (f b) (if b (f b) f))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given mdarsn01 test  3, nbugas01 passed
given mdarsn01 test  3, mleise01 passed
given tsoule01 test  1, mrusse03 passed
given tsoule01 test  1, hlin02   passed
given tsoule01 test  1, esalow01 passed
given tsoule01 test  1, bkolta01 passed
given tsoule01 test  1, gong01   passed
given tsoule01 test  1, nr       typed-untypeable -- Term "((() ()) (() (1) ()))" should trigger a uML error, but your interpreter inferred type "".
given tsoule01 test  1, kmcneely passed
given tsoule01 test  1, jaltre01 passed
given tsoule01 test  1, rmonde01 passed
given tsoule01 test  1, xzhang01 passed
given tsoule01 test  1, jkenne05 passed
given tsoule01 test  1, hnasar01 passed
given tsoule01 test  1, jpearl05 passed
given tsoule01 test  1, mdarsn01 passed
given tsoule01 test  1, tsoule01 passed
given tsoule01 test  1, agallant passed
given tsoule01 test  1, adreyf01 passed
given tsoule01 test  1, jwoold01 errored -- Term "((() ()) (() (1) ()))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given tsoule01 test  1, dkass01  passed
given tsoule01 test  1, asamps01 passed
given tsoule01 test  1, jbryan04 errored -- Term "((() ()) (() (1) ()))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given tsoule01 test  1, nbugas01 passed
given tsoule01 test  1, mleise01 passed
given tsoule01 test  2, mrusse03 passed
given tsoule01 test  2, hlin02   passed
given tsoule01 test  2, esalow01 passed
given tsoule01 test  2, bkolta01 passed
given tsoule01 test  2, gong01   passed
given tsoule01 test  2, nr       typed-untypeable -- Term "(cons (lambda () #t) (lambda () #t))" should trigger a uML error, but your interpreter inferred type "".
given tsoule01 test  2, kmcneely passed
given tsoule01 test  2, jaltre01 passed
given tsoule01 test  2, rmonde01 passed
given tsoule01 test  2, xzhang01 passed
given tsoule01 test  2, jkenne05 passed
given tsoule01 test  2, hnasar01 passed
given tsoule01 test  2, jpearl05 passed
given tsoule01 test  2, mdarsn01 passed
given tsoule01 test  2, tsoule01 passed
given tsoule01 test  2, agallant passed
given tsoule01 test  2, adreyf01 passed
given tsoule01 test  2, jwoold01 errored -- Term "(cons (lambda () #t) (lambda () #t))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given tsoule01 test  2, dkass01  passed
given tsoule01 test  2, asamps01 passed
given tsoule01 test  2, jbryan04 errored -- Term "(cons (lambda () #t) (lambda () #t))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given tsoule01 test  2, nbugas01 passed
given tsoule01 test  2, mleise01 passed
given tsoule01 test  3, mrusse03 passed
given tsoule01 test  3, hlin02   passed
given tsoule01 test  3, esalow01 passed
given tsoule01 test  3, bkolta01 passed
given tsoule01 test  3, gong01   errored -- Term "(letrec ((f (lambda (l) (cons f l)))) (f '()))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given tsoule01 test  3, nr       typed-untypeable -- Term "(letrec ((f (lambda (l) (cons f l)))) (f '()))" should trigger a uML error, but your interpreter inferred type "".
given tsoule01 test  3, kmcneely passed
given tsoule01 test  3, jaltre01 passed
given tsoule01 test  3, rmonde01 passed
given tsoule01 test  3, xzhang01 passed
given tsoule01 test  3, jkenne05 passed
given tsoule01 test  3, hnasar01 passed
given tsoule01 test  3, jpearl05 passed
given tsoule01 test  3, mdarsn01 typed-untypeable -- Term "(letrec ((f (lambda (l) (cons f l)))) (f '()))" should trigger a uML error, but your interpreter inferred type "forall 'a . (('a list -> 'a list) list -> ('a list -> 'a list) list) list".
given tsoule01 test  3, tsoule01 passed
given tsoule01 test  3, agallant passed
given tsoule01 test  3, adreyf01 passed
given tsoule01 test  3, jwoold01 errored -- Term "(letrec ((f (lambda (l) (cons f l)))) (f '()))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given tsoule01 test  3, dkass01  passed
given tsoule01 test  3, asamps01 passed
given tsoule01 test  3, jbryan04 errored -- Term "(letrec ((f (lambda (l) (cons f l)))) (f '()))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given tsoule01 test  3, nbugas01 passed
given tsoule01 test  3, mleise01 passed
given agallant test  1, mrusse03 passed
given agallant test  1, hlin02   passed
given agallant test  1, esalow01 passed
given agallant test  1, bkolta01 passed
given agallant test  1, gong01   passed
given agallant test  1, nr       typed-incorrectly -- Term "(cons 5 '())" should have type "int list", but your interpreter inferred type "".
given agallant test  1, kmcneely passed
given agallant test  1, jaltre01 passed
given agallant test  1, rmonde01 passed
given agallant test  1, xzhang01 passed
given agallant test  1, jkenne05 passed
given agallant test  1, hnasar01 passed
given agallant test  1, jpearl05 passed
given agallant test  1, mdarsn01 passed
given agallant test  1, tsoule01 passed
given agallant test  1, agallant passed
given agallant test  1, adreyf01 passed
given agallant test  1, jwoold01 errored -- Term "(cons 5 '())" should have type "int list", but your interpreter failed with an uncaught exception.
given agallant test  1, dkass01  passed
given agallant test  1, asamps01 passed
given agallant test  1, jbryan04 errored -- Term "(cons 5 '())" should have type "int list", but your interpreter failed with an uncaught exception.
given agallant test  1, nbugas01 passed
given agallant test  1, mleise01 passed
given agallant test  2, mrusse03 passed
given agallant test  2, hlin02   passed
given agallant test  2, esalow01 passed
given agallant test  2, bkolta01 passed
given agallant test  2, gong01   errored -- Term "(lambda (x)   (letrec ((f (lambda (a) (cons (g a) '())))            (g (lambda (b) (cons (f b) '()))))     (f x)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given agallant test  2, nr       typed-untypeable -- Term "(lambda (x)   (letrec ((f (lambda (a) (cons (g a) '())))            (g (lambda (b) (cons (f b) '()))))     (f x)))" should trigger a uML error, but your interpreter inferred type "".
given agallant test  2, kmcneely passed
given agallant test  2, jaltre01 passed
given agallant test  2, rmonde01 passed
given agallant test  2, xzhang01 passed
given agallant test  2, jkenne05 passed
given agallant test  2, hnasar01 typed-untypeable -- Term "(lambda (x)   (letrec ((f (lambda (a) (cons (g a) '())))            (g (lambda (b) (cons (f b) '()))))     (f x)))" should trigger a uML error, but your interpreter inferred type "forall 'a, 'b . 'a -> 'b list".
given agallant test  2, jpearl05 typed-untypeable -- Term "(lambda (x)   (letrec ((f (lambda (a) (cons (g a) '())))            (g (lambda (b) (cons (f b) '()))))     (f x)))" should trigger a uML error, but your interpreter inferred type "forall 'a, 'b . 'a -> 'b list list list".
given agallant test  2, mdarsn01 typed-untypeable -- Term "(lambda (x)   (letrec ((f (lambda (a) (cons (g a) '())))            (g (lambda (b) (cons (f b) '()))))     (f x)))" should trigger a uML error, but your interpreter inferred type "forall 'a, 'b . 'a -> 'b list list list".
given agallant test  2, tsoule01 passed
given agallant test  2, agallant passed
given agallant test  2, adreyf01 typed-untypeable -- Term "(lambda (x)   (letrec ((f (lambda (a) (cons (g a) '())))            (g (lambda (b) (cons (f b) '()))))     (f x)))" should trigger a uML error, but your interpreter inferred type "forall 'a, 'b . 'a -> 'b list".
given agallant test  2, jwoold01 errored -- Term "(lambda (x)   (letrec ((f (lambda (a) (cons (g a) '())))            (g (lambda (b) (cons (f b) '()))))     (f x)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given agallant test  2, dkass01  passed
given agallant test  2, asamps01 typed-untypeable -- Term "(lambda (x)   (letrec ((f (lambda (a) (cons (g a) '())))            (g (lambda (b) (cons (f b) '()))))     (f x)))" should trigger a uML error, but your interpreter inferred type "forall 'a, 'b . 'a -> 'b list list list".
given agallant test  2, jbryan04 errored -- Term "(lambda (x)   (letrec ((f (lambda (a) (cons (g a) '())))            (g (lambda (b) (cons (f b) '()))))     (f x)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given agallant test  2, nbugas01 passed
given agallant test  2, mleise01 passed
given agallant test  3, mrusse03 passed
given agallant test  3, hlin02   passed
given agallant test  3, esalow01 passed
given agallant test  3, bkolta01 errored -- Term "(if #t (begin) #f)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given agallant test  3, gong01   passed
given agallant test  3, nr       typed-untypeable -- Term "(if #t (begin) #f)" should trigger a uML error, but your interpreter inferred type "".
given agallant test  3, kmcneely passed
given agallant test  3, jaltre01 passed
given agallant test  3, rmonde01 errored -- Term "(if #t (begin) #f)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given agallant test  3, xzhang01 passed
given agallant test  3, jkenne05 passed
given agallant test  3, hnasar01 errored -- Term "(if #t (begin) #f)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given agallant test  3, jpearl05 passed
given agallant test  3, mdarsn01 passed
given agallant test  3, tsoule01 passed
given agallant test  3, agallant passed
given agallant test  3, adreyf01 passed
given agallant test  3, jwoold01 errored -- Term "(if #t (begin) #f)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given agallant test  3, dkass01  passed
given agallant test  3, asamps01 errored -- Term "(if #t (begin) #f)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given agallant test  3, jbryan04 errored -- Term "(if #t (begin) #f)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given agallant test  3, nbugas01 passed
given agallant test  3, mleise01 passed
given adreyf01 test  1, mrusse03 passed
given adreyf01 test  1, hlin02   passed
given adreyf01 test  1, esalow01 passed
given adreyf01 test  1, bkolta01 passed
given adreyf01 test  1, gong01   passed
given adreyf01 test  1, nr       typed-untypeable -- Term "(fst '(2 4))" should trigger a uML error, but your interpreter inferred type "".
given adreyf01 test  1, kmcneely passed
given adreyf01 test  1, jaltre01 passed
given adreyf01 test  1, rmonde01 passed
given adreyf01 test  1, xzhang01 passed
given adreyf01 test  1, jkenne05 passed
given adreyf01 test  1, hnasar01 passed
given adreyf01 test  1, jpearl05 passed
given adreyf01 test  1, mdarsn01 passed
given adreyf01 test  1, tsoule01 passed
given adreyf01 test  1, agallant passed
given adreyf01 test  1, adreyf01 passed
given adreyf01 test  1, jwoold01 errored -- Term "(fst '(2 4))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given adreyf01 test  1, dkass01  passed
given adreyf01 test  1, asamps01 passed
given adreyf01 test  1, jbryan04 errored -- Term "(fst '(2 4))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given adreyf01 test  1, nbugas01 passed
given adreyf01 test  1, mleise01 passed
given adreyf01 test  2, mrusse03 passed
given adreyf01 test  2, hlin02   passed
given adreyf01 test  2, esalow01 passed
given adreyf01 test  2, bkolta01 passed
given adreyf01 test  2, gong01   passed
given adreyf01 test  2, nr       typed-untypeable -- Term "(val x (lambda (a b) (letrec ((b 3) (a #t)) (+ a b))))" should trigger a uML error, but your interpreter inferred type "".
given adreyf01 test  2, kmcneely passed
given adreyf01 test  2, jaltre01 passed
given adreyf01 test  2, rmonde01 passed
given adreyf01 test  2, xzhang01 passed
given adreyf01 test  2, jkenne05 passed
given adreyf01 test  2, hnasar01 passed
given adreyf01 test  2, jpearl05 passed
given adreyf01 test  2, mdarsn01 passed
given adreyf01 test  2, tsoule01 passed
given adreyf01 test  2, agallant passed
given adreyf01 test  2, adreyf01 passed
given adreyf01 test  2, jwoold01 errored -- Term "(val x (lambda (a b) (letrec ((b 3) (a #t)) (+ a b))))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given adreyf01 test  2, dkass01  passed
given adreyf01 test  2, asamps01 passed
given adreyf01 test  2, jbryan04 errored -- Term "(val x (lambda (a b) (letrec ((b 3) (a #t)) (+ a b))))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given adreyf01 test  2, nbugas01 passed
given adreyf01 test  2, mleise01 passed
given adreyf01 test  3, mrusse03 passed
given adreyf01 test  3, hlin02   passed
given adreyf01 test  3, esalow01 passed
given adreyf01 test  3, bkolta01 passed
given adreyf01 test  3, gong01   passed
given adreyf01 test  3, nr       typed-incorrectly -- Term "(begin (if (= 4 5) #t #f ))" should have type "bool", but your interpreter inferred type "".
given adreyf01 test  3, kmcneely passed
given adreyf01 test  3, jaltre01 passed
given adreyf01 test  3, rmonde01 passed
given adreyf01 test  3, xzhang01 passed
given adreyf01 test  3, jkenne05 passed
given adreyf01 test  3, hnasar01 passed
given adreyf01 test  3, jpearl05 passed
given adreyf01 test  3, mdarsn01 passed
given adreyf01 test  3, tsoule01 passed
given adreyf01 test  3, agallant passed
given adreyf01 test  3, adreyf01 did-not-type -- Term "(begin (if (= 4 5) #t #f ))" should have type "bool", but your interpreter failed with the message "type error: Cannot unify 'a * 'a and int * int".
given adreyf01 test  3, jwoold01 errored -- Term "(begin (if (= 4 5) #t #f ))" should have type "bool", but your interpreter failed with an uncaught exception.
given adreyf01 test  3, dkass01  passed
given adreyf01 test  3, asamps01 passed
given adreyf01 test  3, jbryan04 errored -- Term "(begin (if (= 4 5) #t #f ))" should have type "bool", but your interpreter failed with an uncaught exception.
given adreyf01 test  3, nbugas01 passed
given adreyf01 test  3, mleise01 passed
given jwoold01 test  1, mrusse03 passed
given jwoold01 test  1, hlin02   passed
given jwoold01 test  1, esalow01 passed
given jwoold01 test  1, bkolta01 passed
given jwoold01 test  1, gong01   passed
given jwoold01 test  1, nr       typed-untypeable -- Term "(val test (lambda (x) (lambda (y))))" should trigger a uML error, but your interpreter inferred type "".
given jwoold01 test  1, kmcneely passed
given jwoold01 test  1, jaltre01 passed
given jwoold01 test  1, rmonde01 passed
given jwoold01 test  1, xzhang01 passed
given jwoold01 test  1, jkenne05 passed
given jwoold01 test  1, hnasar01 passed
given jwoold01 test  1, jpearl05 passed
given jwoold01 test  1, mdarsn01 passed
given jwoold01 test  1, tsoule01 passed
given jwoold01 test  1, agallant passed
given jwoold01 test  1, adreyf01 passed
given jwoold01 test  1, jwoold01 errored -- Term "(val test (lambda (x) (lambda (y))))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given jwoold01 test  1, dkass01  passed
given jwoold01 test  1, asamps01 passed
given jwoold01 test  1, jbryan04 errored -- Term "(val test (lambda (x) (lambda (y))))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given jwoold01 test  1, nbugas01 passed
given jwoold01 test  1, mleise01 passed
given jwoold01 test  2, mrusse03 passed
given jwoold01 test  2, hlin02   passed
given jwoold01 test  2, esalow01 passed
given jwoold01 test  2, bkolta01 passed
given jwoold01 test  2, gong01   passed
given jwoold01 test  2, nr       typed-untypeable -- Term "(+ #t #t)" should trigger a uML error, but your interpreter inferred type "".
given jwoold01 test  2, kmcneely passed
given jwoold01 test  2, jaltre01 passed
given jwoold01 test  2, rmonde01 passed
given jwoold01 test  2, xzhang01 passed
given jwoold01 test  2, jkenne05 passed
given jwoold01 test  2, hnasar01 passed
given jwoold01 test  2, jpearl05 passed
given jwoold01 test  2, mdarsn01 passed
given jwoold01 test  2, tsoule01 passed
given jwoold01 test  2, agallant passed
given jwoold01 test  2, adreyf01 passed
given jwoold01 test  2, jwoold01 errored -- Term "(+ #t #t)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given jwoold01 test  2, dkass01  passed
given jwoold01 test  2, asamps01 passed
given jwoold01 test  2, jbryan04 errored -- Term "(+ #t #t)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given jwoold01 test  2, nbugas01 passed
given jwoold01 test  2, mleise01 passed
given jwoold01 test  3, mrusse03 passed
given jwoold01 test  3, hlin02   passed
given jwoold01 test  3, esalow01 passed
given jwoold01 test  3, bkolta01 passed
given jwoold01 test  3, gong01   passed
given jwoold01 test  3, nr       typed-untypeable -- Term "(cons (lambda (x)) (lambda (y)))" should trigger a uML error, but your interpreter inferred type "".
given jwoold01 test  3, kmcneely passed
given jwoold01 test  3, jaltre01 passed
given jwoold01 test  3, rmonde01 passed
given jwoold01 test  3, xzhang01 passed
given jwoold01 test  3, jkenne05 passed
given jwoold01 test  3, hnasar01 passed
given jwoold01 test  3, jpearl05 passed
given jwoold01 test  3, mdarsn01 passed
given jwoold01 test  3, tsoule01 passed
given jwoold01 test  3, agallant passed
given jwoold01 test  3, adreyf01 passed
given jwoold01 test  3, jwoold01 errored -- Term "(cons (lambda (x)) (lambda (y)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given jwoold01 test  3, dkass01  passed
given jwoold01 test  3, asamps01 passed
given jwoold01 test  3, jbryan04 errored -- Term "(cons (lambda (x)) (lambda (y)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given jwoold01 test  3, nbugas01 passed
given jwoold01 test  3, mleise01 passed
given dkass01  test  1, mrusse03 passed
given dkass01  test  1, hlin02   passed
given dkass01  test  1, esalow01 passed
given dkass01  test  1, bkolta01 passed
given dkass01  test  1, gong01   passed
given dkass01  test  1, nr       typed-untypeable -- Term "(val bad1 (letrec       ((o (lambda (n) (= n #t)))          (p (lambda (n) (o (+ n 1))))) p))" should trigger a uML error, but your interpreter inferred type "".
given dkass01  test  1, kmcneely passed
given dkass01  test  1, jaltre01 passed
given dkass01  test  1, rmonde01 passed
given dkass01  test  1, xzhang01 passed
given dkass01  test  1, jkenne05 passed
given dkass01  test  1, hnasar01 typed-untypeable -- Term "(val bad1 (letrec       ((o (lambda (n) (= n #t)))          (p (lambda (n) (o (+ n 1))))) p))" should trigger a uML error, but your interpreter inferred type "forall 'a . int -> 'a".
given dkass01  test  1, jpearl05 passed
given dkass01  test  1, mdarsn01 typed-untypeable -- Term "(val bad1 (letrec       ((o (lambda (n) (= n #t)))          (p (lambda (n) (o (+ n 1))))) p))" should trigger a uML error, but your interpreter inferred type "bool -> bool".
given dkass01  test  1, tsoule01 passed
given dkass01  test  1, agallant passed
given dkass01  test  1, adreyf01 passed
given dkass01  test  1, jwoold01 errored -- Term "(val bad1 (letrec       ((o (lambda (n) (= n #t)))          (p (lambda (n) (o (+ n 1))))) p))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given dkass01  test  1, dkass01  passed
given dkass01  test  1, asamps01 passed
given dkass01  test  1, jbryan04 errored -- Term "(val bad1 (letrec       ((o (lambda (n) (= n #t)))          (p (lambda (n) (o (+ n 1))))) p))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given dkass01  test  1, nbugas01 passed
given dkass01  test  1, mleise01 passed
given dkass01  test  2, mrusse03 passed
given dkass01  test  2, hlin02   passed
given dkass01  test  2, esalow01 passed
given dkass01  test  2, bkolta01 passed
given dkass01  test  2, gong01   passed
given dkass01  test  2, nr       typed-incorrectly -- Term "(val bad2 (lambda (x y) (cons (fst y) x)))" should have type "forall 'a, 'b . 'a list * ('a * 'b) -> 'a list", but your interpreter inferred type "".
given dkass01  test  2, kmcneely passed
given dkass01  test  2, jaltre01 passed
given dkass01  test  2, rmonde01 passed
given dkass01  test  2, xzhang01 passed
given dkass01  test  2, jkenne05 passed
given dkass01  test  2, hnasar01 passed
given dkass01  test  2, jpearl05 passed
given dkass01  test  2, mdarsn01 typed-incorrectly -- Term "(val bad2 (lambda (x y) (cons (fst y) x)))" should have type "forall 'a, 'b . 'a list * ('a * 'b) -> 'a list", but your interpreter inferred type "forall 'a, 'b . ('a * 'b) * 'a list -> 'a list".
given dkass01  test  2, tsoule01 passed
given dkass01  test  2, agallant passed
given dkass01  test  2, adreyf01 passed
given dkass01  test  2, jwoold01 errored -- Term "(val bad2 (lambda (x y) (cons (fst y) x)))" should have type "forall 'a, 'b . 'a list * ('a * 'b) -> 'a list", but your interpreter failed with an uncaught exception.
given dkass01  test  2, dkass01  passed
given dkass01  test  2, asamps01 passed
given dkass01  test  2, jbryan04 errored -- Term "(val bad2 (lambda (x y) (cons (fst y) x)))" should have type "forall 'a, 'b . 'a list * ('a * 'b) -> 'a list", but your interpreter failed with an uncaught exception.
given dkass01  test  2, nbugas01 passed
given dkass01  test  2, mleise01 passed
given dkass01  test  3, mrusse03 passed
given dkass01  test  3, hlin02   passed
given dkass01  test  3, esalow01 passed
given dkass01  test  3, bkolta01 passed
given dkass01  test  3, gong01   passed
given dkass01  test  3, nr       typed-incorrectly -- Term "(val bad3 (lambda (x) (pair (snd x) (fst x))))" should have type "forall 'a, 'b . ('a * 'b) -> 'b * 'a", but your interpreter inferred type "".
given dkass01  test  3, kmcneely passed
given dkass01  test  3, jaltre01 passed
given dkass01  test  3, rmonde01 passed
given dkass01  test  3, xzhang01 passed
given dkass01  test  3, jkenne05 passed
given dkass01  test  3, hnasar01 passed
given dkass01  test  3, jpearl05 passed
given dkass01  test  3, mdarsn01 passed
given dkass01  test  3, tsoule01 passed
given dkass01  test  3, agallant passed
given dkass01  test  3, adreyf01 passed
given dkass01  test  3, jwoold01 errored -- Term "(val bad3 (lambda (x) (pair (snd x) (fst x))))" should have type "forall 'a, 'b . ('a * 'b) -> 'b * 'a", but your interpreter failed with an uncaught exception.
given dkass01  test  3, dkass01  passed
given dkass01  test  3, asamps01 passed
given dkass01  test  3, jbryan04 errored -- Term "(val bad3 (lambda (x) (pair (snd x) (fst x))))" should have type "forall 'a, 'b . ('a * 'b) -> 'b * 'a", but your interpreter failed with an uncaught exception.
given dkass01  test  3, nbugas01 passed
given dkass01  test  3, mleise01 passed
given asamps01 test  1, mrusse03 passed
given asamps01 test  1, hlin02   passed
given asamps01 test  1, esalow01 passed
given asamps01 test  1, bkolta01 passed
given asamps01 test  1, gong01   passed
given asamps01 test  1, nr       typed-incorrectly -- Term "(lambda (l) (if (car l) '() '()))" should have type "forall 'a . bool list -> 'a list", but your interpreter inferred type "".
given asamps01 test  1, kmcneely passed
given asamps01 test  1, jaltre01 typed-incorrectly -- Term "(lambda (l) (if (car l) '() '()))" should have type "forall 'a . bool list -> 'a list", but your interpreter inferred type "forall 'a, 'b . 'a -> 'b list".
given asamps01 test  1, rmonde01 passed
given asamps01 test  1, xzhang01 passed
given asamps01 test  1, jkenne05 passed
given asamps01 test  1, hnasar01 passed
given asamps01 test  1, jpearl05 passed
given asamps01 test  1, mdarsn01 typed-incorrectly -- Term "(lambda (l) (if (car l) '() '()))" should have type "forall 'a . bool list -> 'a list", but your interpreter inferred type "forall 'a, 'b . 'a -> 'b list".
given asamps01 test  1, tsoule01 passed
given asamps01 test  1, agallant passed
given asamps01 test  1, adreyf01 passed
given asamps01 test  1, jwoold01 errored -- Term "(lambda (l) (if (car l) '() '()))" should have type "forall 'a . bool list -> 'a list", but your interpreter failed with an uncaught exception.
given asamps01 test  1, dkass01  passed
given asamps01 test  1, asamps01 passed
given asamps01 test  1, jbryan04 errored -- Term "(lambda (l) (if (car l) '() '()))" should have type "forall 'a . bool list -> 'a list", but your interpreter failed with an uncaught exception.
given asamps01 test  1, nbugas01 passed
given asamps01 test  1, mleise01 passed
given asamps01 test  2, mrusse03 passed
given asamps01 test  2, hlin02   passed
given asamps01 test  2, esalow01 passed
given asamps01 test  2, bkolta01 passed
given asamps01 test  2, gong01   passed
given asamps01 test  2, nr       typed-untypeable -- Term "(letrec ((f (lambda (x) (+ 1 x))) (g (lambda (x) (f (not x))))) g)" should trigger a uML error, but your interpreter inferred type "".
given asamps01 test  2, kmcneely passed
given asamps01 test  2, jaltre01 passed
given asamps01 test  2, rmonde01 passed
given asamps01 test  2, xzhang01 passed
given asamps01 test  2, jkenne05 passed
given asamps01 test  2, hnasar01 typed-untypeable -- Term "(letrec ((f (lambda (x) (+ 1 x))) (g (lambda (x) (f (not x))))) g)" should trigger a uML error, but your interpreter inferred type "forall 'a . bool -> 'a".
given asamps01 test  2, jpearl05 passed
given asamps01 test  2, mdarsn01 typed-untypeable -- Term "(letrec ((f (lambda (x) (+ 1 x))) (g (lambda (x) (f (not x))))) g)" should trigger a uML error, but your interpreter inferred type "int -> int".
given asamps01 test  2, tsoule01 passed
given asamps01 test  2, agallant passed
given asamps01 test  2, adreyf01 passed
given asamps01 test  2, jwoold01 errored -- Term "(letrec ((f (lambda (x) (+ 1 x))) (g (lambda (x) (f (not x))))) g)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given asamps01 test  2, dkass01  passed
given asamps01 test  2, asamps01 passed
given asamps01 test  2, jbryan04 errored -- Term "(letrec ((f (lambda (x) (+ 1 x))) (g (lambda (x) (f (not x))))) g)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given asamps01 test  2, nbugas01 passed
given asamps01 test  2, mleise01 passed
given asamps01 test  3, mrusse03 passed
given asamps01 test  3, hlin02   passed
given asamps01 test  3, esalow01 passed
given asamps01 test  3, bkolta01 passed
given asamps01 test  3, gong01   passed
given asamps01 test  3, nr       typed-untypeable -- Term "(let ((symnil (cdr (list1 'a))) (x 1)) (begin (cons x symnil)))" should trigger a uML error, but your interpreter inferred type "".
given asamps01 test  3, kmcneely passed
given asamps01 test  3, jaltre01 passed
given asamps01 test  3, rmonde01 passed
given asamps01 test  3, xzhang01 passed
given asamps01 test  3, jkenne05 passed
given asamps01 test  3, hnasar01 passed
given asamps01 test  3, jpearl05 passed
given asamps01 test  3, mdarsn01 passed
given asamps01 test  3, tsoule01 passed
given asamps01 test  3, agallant passed
given asamps01 test  3, adreyf01 passed
given asamps01 test  3, jwoold01 errored -- Term "(let ((symnil (cdr (list1 'a))) (x 1)) (begin (cons x symnil)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given asamps01 test  3, dkass01  passed
given asamps01 test  3, asamps01 passed
given asamps01 test  3, jbryan04 errored -- Term "(let ((symnil (cdr (list1 'a))) (x 1)) (begin (cons x symnil)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given asamps01 test  3, nbugas01 passed
given asamps01 test  3, mleise01 typed-untypeable -- Term "(let ((symnil (cdr (list1 'a))) (x 1)) (begin (cons x symnil)))" should trigger a uML error, but your interpreter inferred type "int list".
given jbryan04 test  1, mrusse03 passed
given jbryan04 test  1, hlin02   passed
given jbryan04 test  1, esalow01 passed
given jbryan04 test  1, bkolta01 passed
given jbryan04 test  1, gong01   errored -- Term "(val-rec f (lambda (g) (g f)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given jbryan04 test  1, nr       typed-untypeable -- Term "(val-rec f (lambda (g) (g f)))" should trigger a uML error, but your interpreter inferred type "".
given jbryan04 test  1, kmcneely passed
given jbryan04 test  1, jaltre01 passed
given jbryan04 test  1, rmonde01 passed
given jbryan04 test  1, xzhang01 passed
given jbryan04 test  1, jkenne05 passed
given jbryan04 test  1, hnasar01 passed
given jbryan04 test  1, jpearl05 passed
given jbryan04 test  1, mdarsn01 typed-untypeable -- Term "(val-rec f (lambda (g) (g f)))" should trigger a uML error, but your interpreter inferred type "forall 'a, 'b . ((('a -> 'b) -> 'b) -> 'b) -> 'b".
given jbryan04 test  1, tsoule01 passed
given jbryan04 test  1, agallant passed
given jbryan04 test  1, adreyf01 passed
given jbryan04 test  1, jwoold01 errored -- Term "(val-rec f (lambda (g) (g f)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given jbryan04 test  1, dkass01  passed
given jbryan04 test  1, asamps01 passed
given jbryan04 test  1, jbryan04 errored -- Term "(val-rec f (lambda (g) (g f)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given jbryan04 test  1, nbugas01 passed
given jbryan04 test  1, mleise01 passed
given jbryan04 test  2, mrusse03 passed
given jbryan04 test  2, hlin02   passed
given jbryan04 test  2, esalow01 passed
given jbryan04 test  2, bkolta01 passed
given jbryan04 test  2, gong01   passed
given jbryan04 test  2, nr       typed-incorrectly -- Term "(cons (+ 1 2) '())" should have type "int list", but your interpreter inferred type "".
given jbryan04 test  2, kmcneely passed
given jbryan04 test  2, jaltre01 passed
given jbryan04 test  2, rmonde01 passed
given jbryan04 test  2, xzhang01 passed
given jbryan04 test  2, jkenne05 passed
given jbryan04 test  2, hnasar01 passed
given jbryan04 test  2, jpearl05 passed
given jbryan04 test  2, mdarsn01 passed
given jbryan04 test  2, tsoule01 passed
given jbryan04 test  2, agallant passed
given jbryan04 test  2, adreyf01 did-not-type -- Term "(cons (+ 1 2) '())" should have type "int list", but your interpreter failed with the message "type error: Cannot unify int * int and int * int".
given jbryan04 test  2, jwoold01 errored -- Term "(cons (+ 1 2) '())" should have type "int list", but your interpreter failed with an uncaught exception.
given jbryan04 test  2, dkass01  passed
given jbryan04 test  2, asamps01 passed
given jbryan04 test  2, jbryan04 errored -- Term "(cons (+ 1 2) '())" should have type "int list", but your interpreter failed with an uncaught exception.
given jbryan04 test  2, nbugas01 passed
given jbryan04 test  2, mleise01 passed
given jbryan04 test  3, mrusse03 passed
given jbryan04 test  3, hlin02   passed
given jbryan04 test  3, esalow01 passed
given jbryan04 test  3, bkolta01 passed
given jbryan04 test  3, gong01   passed
given jbryan04 test  3, nr       typed-incorrectly -- Term "(lambda (x y z) (cons (cons x y) z))" should have type "forall 'a . 'a * 'a list * 'a list list -> 'a list list", but your interpreter inferred type "".
given jbryan04 test  3, kmcneely passed
given jbryan04 test  3, jaltre01 passed
given jbryan04 test  3, rmonde01 passed
given jbryan04 test  3, xzhang01 passed
given jbryan04 test  3, jkenne05 passed
given jbryan04 test  3, hnasar01 passed
given jbryan04 test  3, jpearl05 passed
given jbryan04 test  3, mdarsn01 typed-incorrectly -- Term "(lambda (x y z) (cons (cons x y) z))" should have type "forall 'a . 'a * 'a list * 'a list list -> 'a list list", but your interpreter inferred type "forall 'a . 'a list list * 'a list * 'a -> 'a list list".
given jbryan04 test  3, tsoule01 passed
given jbryan04 test  3, agallant passed
given jbryan04 test  3, adreyf01 passed
given jbryan04 test  3, jwoold01 errored -- Term "(lambda (x y z) (cons (cons x y) z))" should have type "forall 'a . 'a * 'a list * 'a list list -> 'a list list", but your interpreter failed with an uncaught exception.
given jbryan04 test  3, dkass01  passed
given jbryan04 test  3, asamps01 passed
given jbryan04 test  3, jbryan04 errored -- Term "(lambda (x y z) (cons (cons x y) z))" should have type "forall 'a . 'a * 'a list * 'a list list -> 'a list list", but your interpreter failed with an uncaught exception.
given jbryan04 test  3, nbugas01 passed
given jbryan04 test  3, mleise01 passed
given nbugas01 test  1, mrusse03 passed
given nbugas01 test  1, hlin02   passed
given nbugas01 test  1, esalow01 passed
given nbugas01 test  1, bkolta01 passed
given nbugas01 test  1, gong01   passed
given nbugas01 test  1, nr       typed-incorrectly -- Term "(define f (x) (if #t (car x) (f x)))" should have type "forall 'a . 'a list -> 'a", but your interpreter inferred type "".
given nbugas01 test  1, kmcneely passed
given nbugas01 test  1, jaltre01 typed-incorrectly -- Term "(define f (x) (if #t (car x) (f x)))" should have type "forall 'a . 'a list -> 'a", but your interpreter inferred type "forall 'a, 'b . 'a -> 'b".
given nbugas01 test  1, rmonde01 passed
given nbugas01 test  1, xzhang01 passed
given nbugas01 test  1, jkenne05 passed
given nbugas01 test  1, hnasar01 passed
given nbugas01 test  1, jpearl05 passed
given nbugas01 test  1, mdarsn01 typed-incorrectly -- Term "(define f (x) (if #t (car x) (f x)))" should have type "forall 'a . 'a list -> 'a", but your interpreter inferred type "forall 'a, 'b . 'a -> 'b".
given nbugas01 test  1, tsoule01 passed
given nbugas01 test  1, agallant passed
given nbugas01 test  1, adreyf01 did-not-type -- Term "(define f (x) (if #t (car x) (f x)))" should have type "forall 'a . 'a list -> 'a", but your interpreter failed with the message "type error: Cannot unify 'a list and 'a list".
given nbugas01 test  1, jwoold01 errored -- Term "(define f (x) (if #t (car x) (f x)))" should have type "forall 'a . 'a list -> 'a", but your interpreter failed with an uncaught exception.
given nbugas01 test  1, dkass01  passed
given nbugas01 test  1, asamps01 passed
given nbugas01 test  1, jbryan04 errored -- Term "(define f (x) (if #t (car x) (f x)))" should have type "forall 'a . 'a list -> 'a", but your interpreter failed with an uncaught exception.
given nbugas01 test  1, nbugas01 passed
given nbugas01 test  1, mleise01 passed
given nbugas01 test  2, mrusse03 passed
given nbugas01 test  2, hlin02   passed
given nbugas01 test  2, esalow01 passed
given nbugas01 test  2, bkolta01 passed
given nbugas01 test  2, gong01   typed-untypeable -- Term "(define f (x) (if x (car x) (f x)))" should trigger a uML error, but your interpreter inferred type "forall 'a . 'a list -> 'a".
given nbugas01 test  2, nr       typed-untypeable -- Term "(define f (x) (if x (car x) (f x)))" should trigger a uML error, but your interpreter inferred type "".
given nbugas01 test  2, kmcneely passed
given nbugas01 test  2, jaltre01 typed-untypeable -- Term "(define f (x) (if x (car x) (f x)))" should trigger a uML error, but your interpreter inferred type "forall 'a . bool -> 'a".
given nbugas01 test  2, rmonde01 passed
given nbugas01 test  2, xzhang01 passed
given nbugas01 test  2, jkenne05 passed
given nbugas01 test  2, hnasar01 passed
given nbugas01 test  2, jpearl05 passed
given nbugas01 test  2, mdarsn01 typed-untypeable -- Term "(define f (x) (if x (car x) (f x)))" should trigger a uML error, but your interpreter inferred type "forall 'a, 'b . 'a -> 'b".
given nbugas01 test  2, tsoule01 passed
given nbugas01 test  2, agallant passed
given nbugas01 test  2, adreyf01 passed
given nbugas01 test  2, jwoold01 errored -- Term "(define f (x) (if x (car x) (f x)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given nbugas01 test  2, dkass01  passed
given nbugas01 test  2, asamps01 typed-untypeable -- Term "(define f (x) (if x (car x) (f x)))" should trigger a uML error, but your interpreter inferred type "forall 'a . 'a list -> 'a".
given nbugas01 test  2, jbryan04 errored -- Term "(define f (x) (if x (car x) (f x)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given nbugas01 test  2, nbugas01 passed
given nbugas01 test  2, mleise01 passed
given nbugas01 test  3, mrusse03 passed
given nbugas01 test  3, hlin02   passed
given nbugas01 test  3, esalow01 passed
given nbugas01 test  3, bkolta01 passed
given nbugas01 test  3, gong01   passed
given nbugas01 test  3, nr       typed-untypeable -- Term "((1) () (#t))" should trigger a uML error, but your interpreter inferred type "".
given nbugas01 test  3, kmcneely passed
given nbugas01 test  3, jaltre01 passed
given nbugas01 test  3, rmonde01 passed
given nbugas01 test  3, xzhang01 passed
given nbugas01 test  3, jkenne05 passed
given nbugas01 test  3, hnasar01 passed
given nbugas01 test  3, jpearl05 passed
given nbugas01 test  3, mdarsn01 passed
given nbugas01 test  3, tsoule01 passed
given nbugas01 test  3, agallant passed
given nbugas01 test  3, adreyf01 passed
given nbugas01 test  3, jwoold01 errored -- Term "((1) () (#t))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given nbugas01 test  3, dkass01  passed
given nbugas01 test  3, asamps01 passed
given nbugas01 test  3, jbryan04 errored -- Term "((1) () (#t))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given nbugas01 test  3, nbugas01 passed
given nbugas01 test  3, mleise01 passed
given mleise01 test  1, mrusse03 passed
given mleise01 test  1, hlin02   passed
given mleise01 test  1, esalow01 passed
given mleise01 test  1, bkolta01 passed
given mleise01 test  1, gong01   passed
given mleise01 test  1, nr       typed-untypeable -- Term "(car 3)" should trigger a uML error, but your interpreter inferred type "".
given mleise01 test  1, kmcneely passed
given mleise01 test  1, jaltre01 passed
given mleise01 test  1, rmonde01 passed
given mleise01 test  1, xzhang01 passed
given mleise01 test  1, jkenne05 passed
given mleise01 test  1, hnasar01 passed
given mleise01 test  1, jpearl05 passed
given mleise01 test  1, mdarsn01 passed
given mleise01 test  1, tsoule01 passed
given mleise01 test  1, agallant passed
given mleise01 test  1, adreyf01 passed
given mleise01 test  1, jwoold01 errored -- Term "(car 3)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given mleise01 test  1, dkass01  passed
given mleise01 test  1, asamps01 passed
given mleise01 test  1, jbryan04 errored -- Term "(car 3)" should trigger a uML error, but your interpreter failed with an uncaught exception.
given mleise01 test  1, nbugas01 passed
given mleise01 test  1, mleise01 passed
given mleise01 test  2, mrusse03 passed
given mleise01 test  2, hlin02   passed
given mleise01 test  2, esalow01 passed
given mleise01 test  2, bkolta01 passed
given mleise01 test  2, gong01   passed
given mleise01 test  2, nr       typed-incorrectly -- Term "(lambda (p) ((lambda (x y) (pair x y)) (fst p) (snd p)))" should have type "forall 'a, 'b . ('a * 'b) -> 'a * 'b", but your interpreter inferred type "".
given mleise01 test  2, kmcneely passed
given mleise01 test  2, jaltre01 passed
given mleise01 test  2, rmonde01 passed
given mleise01 test  2, xzhang01 passed
given mleise01 test  2, jkenne05 passed
given mleise01 test  2, hnasar01 passed
given mleise01 test  2, jpearl05 passed
given mleise01 test  2, mdarsn01 typed-incorrectly -- Term "(lambda (p) ((lambda (x y) (pair x y)) (fst p) (snd p)))" should have type "forall 'a, 'b . ('a * 'b) -> 'a * 'b", but your interpreter inferred type "forall 'a, 'b . ('a * 'b) -> 'b * 'a".
given mleise01 test  2, tsoule01 passed
given mleise01 test  2, agallant passed
given mleise01 test  2, adreyf01 passed
given mleise01 test  2, jwoold01 errored -- Term "(lambda (p) ((lambda (x y) (pair x y)) (fst p) (snd p)))" should have type "forall 'a, 'b . ('a * 'b) -> 'a * 'b", but your interpreter failed with an uncaught exception.
given mleise01 test  2, dkass01  passed
given mleise01 test  2, asamps01 passed
given mleise01 test  2, jbryan04 errored -- Term "(lambda (p) ((lambda (x y) (pair x y)) (fst p) (snd p)))" should have type "forall 'a, 'b . ('a * 'b) -> 'a * 'b", but your interpreter failed with an uncaught exception.
given mleise01 test  2, nbugas01 passed
given mleise01 test  2, mleise01 passed
given mleise01 test  3, mrusse03 passed
given mleise01 test  3, hlin02   passed
given mleise01 test  3, esalow01 passed
given mleise01 test  3, bkolta01 passed
given mleise01 test  3, gong01   passed
given mleise01 test  3, nr       typed-untypeable -- Term "(lambda (p) ((lambda (x y) (pair (x y))) (fst p) (snd p)))" should trigger a uML error, but your interpreter inferred type "".
given mleise01 test  3, kmcneely passed
given mleise01 test  3, jaltre01 passed
given mleise01 test  3, rmonde01 passed
given mleise01 test  3, xzhang01 passed
given mleise01 test  3, jkenne05 passed
given mleise01 test  3, hnasar01 passed
given mleise01 test  3, jpearl05 passed
given mleise01 test  3, mdarsn01 passed
given mleise01 test  3, tsoule01 passed
given mleise01 test  3, agallant passed
given mleise01 test  3, adreyf01 passed
given mleise01 test  3, jwoold01 errored -- Term "(lambda (p) ((lambda (x y) (pair (x y))) (fst p) (snd p)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given mleise01 test  3, dkass01  passed
given mleise01 test  3, asamps01 passed
given mleise01 test  3, jbryan04 errored -- Term "(lambda (p) ((lambda (x y) (pair (x y))) (fst p) (snd p)))" should trigger a uML error, but your interpreter failed with an uncaught exception.
given mleise01 test  3, nbugas01 passed
given mleise01 test  3, mleise01 passed
